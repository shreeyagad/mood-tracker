{"version":3,"sources":["Login/index.js","EmotionForm/index.js","apiClient.js","EmotionNav/index.js","Statistics/index.js","PieChart/index.js","Home/index.js","Emotion/index.js","Data/index.js","Radar/index.js","Main/index.js","index.js"],"names":["Login","props","signIn","bind","signInAsGuest","a","this","oktaAuth","signInWithRedirect","event","preventDefault","username","password","transaction","status","sessionToken","Error","authState","isAuthenticated","to","Container","style","marginTop","textStyle","fontWeight","fontSize","marginBottom","cursorComponent","blinkTimeAfterFinish","textAlign","Button","margin","size","variant","onClick","Component","withOktaAuth","EmotionForm","state","value","handleChange","handleSubmit","setState","target","apiClient","createEmotion","then","newEmotion","showModal","reset","Form","id","onSubmit","Group","className","controlId","Control","as","rows","onChange","type","React","client","axios","create","baseURL","json","offset","Date","getTimezoneOffset","APIClient","accessToken","emotion","perform","emotion_id","emotion_name","obj","Object","year","month","day","yearMonthPairs","apiData","y","Array","from","method","resource","data","url","headers","Authorization","resp","error","EmotionNav","logout","e","userName","deleteAllEmotions","signOut","uploadModel","getUser","user","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","Link","Dropdown","Item","color","Menu","align","minWidth","right","NavDropdown","PieChart","top","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","background","padding","stagger","rotation","lineWidth","spacing","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","styles","theme","root","flexGrow","ml3","emotionToColor","Home","emotions","currEmotion","show","disagreeShow","generateModal","handleStatus","handleDisagree","model","getEmotions","downloadModel","keys","map","num","emotion_data","parseFloat","toFixed","updateEmotion","Modal","centered","backdrop","onHide","keyboard","Header","Title","Body","Footer","backgroundColor","border","date","height","getEmotionData","paddingTop","src","Row","showAlert","generateDisagreeModal","withStyles","Emotion","showDeleteButton","handleClick","handleDelete","emotionData","deleteEmotion","updateState","Card","width","Col","xmlns","viewBox","d","fillRule","Spinner","animation","role","paddingBottom","Text","display","justifyContent","slice","closeButton","monthToMonthNum","Data","calendarStyle","currentDay","getEmotionsByDate","aggregateData","getAggregateData","componentDidMount","today","getFullYear","getMonth","getDate","handleClickDay","parseInt","toString","renderEmotions","Grid","aws_id","length","e1","key","e2","values","sm","fontFamily","onClickDay","position","paddingLeft","overflowY","Radar","months","indexBy","valueFormat","gridLabelOffset","dotSize","dotColor","dotBorderWidth","colors","scheme","blendMode","motionConfig","monthsToIndex","i","Statistics","tempPairs","has","delete","add","generateRadarData","radarEmotionData","Set","getMonths","tempMonths","forEach","m","push","autoClose","onToggle","Check","label","Main","OktaAuth","issuer","clientId","redirectUri","window","location","origin","restoreOriginalUri","_oktaAuth","originalUri","history","replace","toRelativeUrl","exact","path","component","LoginCallback","render","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"0RAQMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAJJ,E,iFAOnB,sBAAAE,EAAA,sEACQC,KAAKL,MAAMM,SAASC,qBAD5B,gD,wHAIA,WAAoBC,GAApB,eAAAJ,EAAA,6DACEI,EAAMC,iBADR,SAE4BJ,KAAKL,MAAMM,SAASL,OAAO,CACnDS,SAAU,iBACVC,SAAU,eAJd,UAO6B,aALrBC,EAFR,QAOkBC,OAPlB,gBAQIR,KAAKL,MAAMM,SAASC,mBAAmB,CAACO,aAAcF,EAAYE,eARtE,4BAUU,IAAIC,MAAM,sBAAwBH,EAAYC,QAVxD,gD,2EAcA,WACE,OAAIR,KAAKL,MAAMgB,UAAUC,gBAChB,cAAC,IAAD,CAAUC,GAAG,UAIpB,eAACC,EAAA,EAAD,WACI,qBAAKC,MAAO,CAACC,UAAW,KAAxB,SACA,cAAC,IAAD,CACAC,UAAW,CAACC,WAAa,OAAQC,SAAW,QAC5CJ,MAAO,CAACK,aAAe,QACvBC,gBAAiB,oCACjBC,sBAAuB,EAJvB,0CAOA,sBAAKP,MAAO,CAACC,UAAW,GAAIO,UAAW,UAAvC,UACA,cAACC,EAAA,EAAD,CAAQT,MAAO,CAACU,OAAQ,IAAKC,KAAK,KAAKC,QAAQ,UAAUC,QAAS5B,KAAKJ,OAAvE,6BACA,cAAC4B,EAAA,EAAD,CAAQT,MAAO,CAACU,OAAQ,IAAKC,KAAK,KAAKC,QAAQ,YAAYC,QAAS5B,KAAKF,cAAzE,yC,GA3CU+B,aAmDLC,cAAapC,G,0BCrBbqC,E,kDAlCX,WAAYpC,GAAQ,IAAD,8BACf,cAAMA,IACDqC,MAAQ,CACTC,MAAO,IAGX,EAAKC,aAAe,EAAKA,aAAarC,KAAlB,gBACpB,EAAKsC,aAAe,EAAKA,aAAatC,KAAlB,gBAPL,E,gDAUnB,SAAaM,GACTH,KAAKoC,SAAS,CAACH,MAAO9B,EAAMkC,OAAOJ,U,0BAGvC,SAAa9B,GAAQ,IAAD,OAChBA,EAAMC,iBACNJ,KAAKL,MAAM2C,UAAUC,cAAc,CAAC,OAAUvC,KAAKgC,MAAMC,QAAQO,MAC7D,SAACC,GAAD,OAAgB,EAAK9C,MAAM+C,UAAUD,MAEzCtC,EAAMkC,OAAOM,U,oBAGjB,WACI,OACA,eAACC,EAAA,EAAD,CAAMC,GAAG,SAASC,SAAU9C,KAAKmC,aAAcpB,MAAO,CAACC,UAAW,IAAlE,UACI,cAAC4B,EAAA,EAAKG,MAAN,CAAYC,UAAU,OAAOC,UAAU,+BAAvC,SACI,cAACL,EAAA,EAAKM,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGC,SAAUrD,KAAKkC,iBAExD,cAACV,EAAA,EAAD,CAAQG,QAAQ,OAAO2B,KAAK,SAA5B,2B,GA7BcC,IAAM1B,W,SCG1B2B,E,OAASC,EAAMC,OAAO,CAC3BC,QAJgB,wCAKhBC,MAAM,IAkBDC,GAAS,IAAIC,MAAOC,oBAEpBC,E,WACJ,WAAYC,GAAc,oBACxBjE,KAAKiE,YAAcA,E,iDAGrB,SAAcC,GACZ,OAAOlE,KAAKmE,QAAQ,OAAb,oBAAkCN,EAAlC,KAA6CK,K,yBAGtD,WACE,OAAOlE,KAAKmE,QAAQ,MAAb,oBAAiCN,EAAjC,Q,2BAGT,SAAcO,EAAYC,GACxB,IAAIC,EAAMC,OAAO,CAAC,aAAgBF,IAClC,OAAOrE,KAAKmE,QAAQ,MAAb,oBAAiCC,EAAjC,YAA+CP,EAA/C,KAA0DS,K,2BAGnE,SAAcF,GACZ,OAAOpE,KAAKmE,QAAQ,SAAb,oBAAoCC,EAApC,YAAkDP,EAAlD,Q,+BAGT,WACE,OAAO7D,KAAKmE,QAAQ,SAAb,oBAAoCN,EAApC,Q,+BAGT,SAAkBW,EAAMC,EAAOC,GAC7B,OAAO1E,KAAKmE,QAAQ,MAAb,oBAAiCK,EAAjC,YAAyCC,EAAzC,YAAkDC,EAAlD,YAAyDb,EAAzD,Q,uCAGT,SAA0BW,EAAMC,GAC9B,OAAOzE,KAAKmE,QAAQ,MAAb,oBAAiCK,EAAjC,YAAyCC,EAAzC,YAAkDZ,EAAlD,Q,+BAGT,SAAkBW,GAChB,OAAOxE,KAAKmE,QAAQ,MAAb,oBAAiCK,EAAjC,YAAyCX,EAAzC,Q,2BAGT,WACE,OAAO7D,KAAKmE,QAAQ,MAAb,sB,0BAGT,SAAaC,EAAY5D,GAA4B,IAApB6D,EAAmB,uDAAN,KACxCC,EAAMC,OAAO,CAAC,WAAcH,EAAY,OAAU5D,EAAQ,aAAgB6D,IAC9E,OAAOrE,KAAKmE,QAAQ,OAAb,kBAAwCG,K,yBAGjD,WACE,OAAOtE,KAAKmE,QAAQ,MAAb,oB,+BAGT,SAAkBQ,GAChB,IAAIC,EAAU,GACd,IAAK,IAAIC,KAAKF,EACZC,EAAQC,GAAKC,MAAMC,KAAKJ,EAAeE,IAEzC,OAAO7E,KAAKmE,QAAQ,OAAb,+BAA6CN,EAA7C,KAAwDe,K,4DAGjE,WAAeI,EAAQC,EAAUC,GAAjC,SAAAnF,EAAA,+EACSyD,EAAO,CACZwB,SACAG,IAAKF,EACLC,OACAE,QAAS,CACPC,cAAc,UAAD,OAAYrF,KAAKiE,gBAE/BzB,MAAK,SAAA8C,GACN,OAAOA,EAAKJ,KAAOI,EAAKJ,KAAOI,EAAKC,UATxC,gD,kEAcavB,I,mCC7BAwB,E,kDA7Db,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IAOR8F,OAAS,SAACC,GACRA,EAAEtF,iBACyB,SAAvB,EAAK4B,MAAM2D,SACb,EAAKhG,MAAM2C,UAAUsD,oBAAoBpD,MAAK,SAACP,GAC7C,EAAKtC,MAAMM,SAAS4F,aAItB,EAAKlG,MAAM2C,UAAUwD,cAActD,MAAK,SAACP,GACvC,EAAKtC,MAAMM,SAAS4F,cAfxB,EAAK7D,MAAQ,CACX2D,SAAU,IAEZ,EAAKF,OAAS,EAAKA,OAAO5F,KAAZ,gBALG,E,qDAsBnB,WAAqB,IAAD,OAClBG,KAAKL,MAAMM,SAAS8F,UAAUvD,MAAK,SAACwD,GACP,SAAvBA,EAAI,YACN,EAAK5D,SAAS,CAACuD,SAAUK,EAAI,OAG7B,EAAK5D,SAAS,CAACuD,SAAU,e,oBAK/B,WACE,OACI,cAACM,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKpF,MAAO,CAACK,aAAc,GAAIJ,UAAW,IAApE,SACA,eAACF,EAAA,EAAD,WACE,cAACmF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,0BACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiB1D,GAAG,mBAApB,UACE,eAAC2D,EAAA,EAAD,CAAKxD,UAAU,UAAf,UACE,cAACwD,EAAA,EAAIC,KAAL,CAAUJ,KAAK,QAAf,kBACA,cAACG,EAAA,EAAIC,KAAL,CAAUJ,KAAK,cAAf,2BAEF,eAACK,EAAA,EAAD,CAAUvD,GAAIqD,IAAIG,KAAlB,UACE,cAACD,EAAA,EAASJ,OAAV,CAAiBnD,GAAIqD,IAAIC,KAAM1F,MAAO,CACpC6F,MAAO,SADT,SAGb5G,KAAKgC,MAAM2D,WAEE,cAACe,EAAA,EAASG,KAAV,CAAeC,MAAM,MAAM/F,MAAO,CAACgG,SAAU,OAAQC,MAAO,OAA5D,SACE,cAACC,EAAA,EAAYN,KAAb,CAAkBxD,GAAI3B,IAAQI,QAAS5B,KAAKyF,OAA5C,sC,GArDSlC,IAAM1B,W,iBCyB/B,ICuEeqF,MAvGf,SAAkBvH,GACd,OACA,cAAC,IAAD,CACIuF,KAAMvF,EAAMuF,KACZzD,OAAQ,CAAE0F,IAAK,GAAIH,MAAO,GAAII,OAAQ,GAAIC,KAAM,IAChDC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,wBAAyB,EACzBC,YAAa,EACbC,YAAa,CAAE5C,KAAM,QAAS6C,UAAW,CAAE,CAAE,SAAU,MACvDC,uBAAwB,GACxBC,uBAAuB,UACvBC,uBAAwB,EACxBC,mBAAoB,CAAEjD,KAAM,SAC5BkD,mBAAoB,GACpBC,mBAAoB,CAAEnD,KAAM,QAAS6C,UAAW,CAAE,CAAE,SAAU,KAC9DO,KAAM,CACF,CACItF,GAAI,OACJS,KAAM,cACN8E,WAAY,UACZxB,MAAO,2BACPlF,KAAM,EACN2G,QAAS,EACTC,SAAS,GAEb,CACIzF,GAAI,QACJS,KAAM,eACN8E,WAAY,UACZxB,MAAO,2BACP2B,UAAW,GACXC,UAAW,EACXC,QAAS,KAGjBC,KAAM,CACF,CACIC,MAAO,CACH9F,GAAI,QAERA,GAAI,QAER,CACI8F,MAAO,CACH9F,GAAI,OAERA,GAAI,QAER,CACI8F,MAAO,CACH9F,GAAI,YAERA,GAAI,QAER,CACI8F,MAAO,CACH9F,GAAI,QAERA,GAAI,QAER,CACI8F,MAAO,CACH9F,GAAI,SAERA,GAAI,SAER,CACI8F,MAAO,CACH9F,GAAI,WAERA,GAAI,UAGZ+F,QAAS,CACL,CACIC,OAAQ,SACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,cAAe,OACfC,cAAe,gBACfC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJ5I,MAAO,CACHsI,cAAe,eClFrCO,EAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACV/I,UAAW,IAEbgJ,IAAK,CACH9I,WAAY,IACZC,SAAU,OAIR8I,EAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAGRC,E,kDACJ,WAAYvK,GAAQ,IAAD,uBACjB,cAAMA,IACDqC,MAAQ,CACXC,MAAO,EACPkI,SAAU,GACVC,YAAa,KACbC,MAAM,EACNC,cAAc,GAEhB,IAAMrG,EAAc,EAAKtE,MAAMgB,UAAUsD,YAAYA,YATpC,OAUjB,EAAK3B,UAAY,IAAI0B,EAAUC,GAE/B,EAAKvB,UAAa,EAAKA,UAAU7C,KAAf,gBAClB,EAAK0K,cAAgB,EAAKA,cAAc1K,KAAnB,gBAErB,EAAK2K,aAAe,EAAKA,aAAa3K,KAAlB,gBACpB,EAAK4K,eAAiB,EAAKA,eAAe5K,KAApB,gBAEtB,EAAK6K,MAAQ,KAlBI,E,qDAqBnB,WAAqB,IAAD,OAClB1K,KAAKsC,UAAUqI,cAAcnI,MAAK,SAAC0C,GAAD,OAChC,EAAK9C,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BmI,SAAUjF,EAAKA,WAE/ClF,KAAK0K,MAAQ1K,KAAKsC,UAAUsI,kB,uBAG9B,SAAUnI,GACRzC,KAAKoC,SAAS,CAACgI,YAAa3H,EAAWyC,OACvClF,KAAKoC,SAAS,CAACiI,MAAM,M,4BAGvB,SAAenG,GAEb,OACEK,OAAOsG,KAAKZ,GAAgBa,KAAI,SAAApF,GAAC,MACjC,CACE,GAAMA,EACN,MAASA,EACT,OANkBqF,EAMI7G,EAAQ8G,aAAatF,GANZuF,WAAWF,GAAKG,QAAQ,IAOvD,MAASjB,EAAevE,IAP5B,IAAsBqF,O,0BAYxB,WAAiC,IAApB1G,EAAmB,uDAAN,KACxBrE,KAAKoC,SAAS,CAACiI,MAAM,IACrBrK,KAAKoC,SAAS,CAACkI,cAAc,IAC7B,IAAIlG,EAAapE,KAAKgC,MAAMoI,YAAYvH,GAC3B7C,KAAKgC,MAAMoI,YAAY5J,OAEf,OAAjB6D,GACFrE,KAAKsC,UAAU6I,cAAc/G,EAAYC,K,4BAI7C,WACErE,KAAKoC,SAAS,CAACiI,MAAM,IACrBrK,KAAKoC,SAAS,CAACkI,cAAc,M,mCAG/B,WAAyB,IAAD,OACtB,OACE,eAACc,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAS,SAASjB,KAAMrK,KAAKgC,MAAMsI,aAAciB,QAASvL,KAAKgC,MAAMsI,aAAckB,UAAU,EAA7G,UACE,cAACJ,EAAA,EAAMK,OAAP,CAAc1K,MAAO,CAACQ,UAAW,UAAjC,SACE,cAAC6J,EAAA,EAAMM,MAAP,yBAEF,eAACN,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAa3K,MAAO,CAAC6F,MAAOqD,EAAejK,KAAKgC,MAAMoI,YAAYlG,SAAU3C,UAAW,SAAUH,aAAc,IAA/G,iCAAyIpB,KAAKgC,MAAMoI,YAAYlG,QAAhK,WACA,mBAAGnD,MAAO,CAACQ,UAAW,UAAtB,SAAkCvB,KAAKgC,MAAMoI,YAAY5J,SACzD,cAAC4K,EAAA,EAAMM,MAAP,CAAa3K,MAAO,CAACQ,UAAW,UAAhC,6CAEF,cAAC6J,EAAA,EAAMQ,OAAP,UAEIrH,OAAOsG,KAAKZ,GAAgBa,KAAI,SAAA5G,GAAO,OACvC,cAAC1C,EAAA,EAAD,CAAsBT,MAAO,CAAC8K,gBAAiB5B,EAAe/F,GAAU4H,OAAQ,QAC9ElK,QAAS,kBAAM,EAAK4I,aAAatG,IADnC,SAEGA,GAFUA,a,2BAUvB,WAAiB,IAAD,OACd,GAAIlE,KAAKgC,MAAMqI,KACb,OACE,eAACe,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAS,SAASjB,KAAMrK,KAAKgC,MAAMqI,KAAMkB,OAAQ,kBAAM,EAAKnJ,SAAS,CAACiI,MAAM,KAASmB,UAAU,EAA/G,UACE,cAACJ,EAAA,EAAMK,OAAP,UACE,cAACL,EAAA,EAAMM,MAAP,UAAc1L,KAAKgC,MAAMoI,YAAY2B,SAEvC,eAACX,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAa3K,MAAO,CAAC6F,MAAOqD,EAAejK,KAAKgC,MAAMoI,YAAYlG,SAAU3C,UAAW,SAAUH,aAAc,IAA/G,sBAA8HpB,KAAKgC,MAAMoI,YAAYlG,QAArJ,OACA,mBAAGnD,MAAO,CAACQ,UAAW,UAAtB,SAAkCvB,KAAKgC,MAAMoI,YAAY5J,SACzD,cAACM,EAAA,EAAD,CAAWC,MAAO,CAACiL,OAAQ,KAA3B,SAAiC,cAAC,EAAD,CAAU9G,KAAMlF,KAAKiM,eAAejM,KAAKgC,MAAMoI,oBAElF,eAACgB,EAAA,EAAMQ,OAAP,WACA,cAACpK,EAAA,EAAD,CAAQT,MAAO,CAAC8K,gBAAiB,UAAWC,OAAQ,QAASlK,QAAS,kBAAM,EAAK4I,gBAAjF,mBAGA,cAAChJ,EAAA,EAAD,CAAQT,MAAO,CAAC8K,gBAAiB,UAAWC,OAAQ,QAASlK,QAAS,kBAAM,EAAK6I,kBAAjF,8B,oBASR,WACE,OACE,qBAAKzH,UAAW4G,EAAOE,KAAvB,SACE,eAAChJ,EAAA,EAAD,WACE,cAAC,EAAD,CAAYb,SAAUD,KAAKL,MAAMM,SAAUqC,UAAWtC,KAAKsC,YAC3D,cAAC,IAAD,CACErB,UAAW,CAACC,WAAY,OAAQC,SAAW,QAC3CJ,MAAO,CAACC,UAAU,QAASI,aAAc,QACzCC,gBAAiB,oCACjBC,sBAAuB,EAJzB,wCAMA,oBAAIP,MAAO,CAACQ,UAAW,SAAU2K,WAAY,GAAItF,MAAO,QAAxD,4CACA,wBAAQuF,IAAI,sEACZ,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,CAAa1J,UAAW1C,KAAK0C,UAAW2J,UAAWrM,KAAKqM,UAAW/J,UAAWtC,KAAKsC,YAClFtC,KAAKgC,MAAMsI,aAAetK,KAAKsM,wBAAyBtM,KAAKuK,4B,GA/HvDhH,IAAM1B,WAuIV0K,cAAW3C,EAAX2C,CAAmBzK,YAAaoI,I,mDChKzCD,EAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAmFCuC,G,kDA9Eb,WAAY7M,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,MAAQ,CACXqI,MAAM,EACNoC,kBAAkB,GAEpB,EAAKC,YAAc,EAAKA,YAAY7M,KAAjB,gBACnB,EAAK8M,aAAe,EAAKA,aAAa9M,KAAlB,gBAEpB,EAAK+M,YACHrI,OAAOsG,KAAKZ,GAAgBa,KAAI,SAAA5G,GAAO,MACvC,CACE,GAAMA,EACN,MAASA,EACT,OANkB6G,EAMI,EAAKpL,MAAMuE,QAAQ8G,aAAa9G,GANvB+G,WAAWF,GAAKG,QAAQ,IAOvD,MAASjB,EAAe/F,IAP5B,IAAsB6G,KARL,E,+CAmBnB,SAAY5K,GACVH,KAAKoC,SAAS,CACZiI,MAAOrK,KAAKgC,MAAMqI,S,0BAItB,SAAalK,GACXH,KAAKoC,SAAS,CAACqK,kBAAkB,IACjCzM,KAAKL,MAAM2C,UAAUuK,cAAc7M,KAAKL,MAAMuE,QAAQrB,IACtD7C,KAAKL,MAAMmN,cACX9M,KAAKL,MAAMmN,gB,oBAGb,WAAU,IAAD,OACP,OACE,eAACC,EAAA,EAAD,CAAMhM,MAAO,CAACqH,WAAY6B,EAAejK,KAAKL,MAAMuE,QAAQA,SAAU8I,MAAO,SAA7E,UACE,cAACD,EAAA,EAAKtB,OAAN,UACE,cAACW,EAAA,EAAD,UACE,cAACa,EAAA,EAAD,UACE,wBAAQrL,QAAS5B,KAAK2M,aAAc5L,MAAO,CAAC+K,OAAQ,EAAGD,gBAAiB,eAAxE,SACE7L,KAAKgC,MAAMyK,iBACX,sBAAKS,MAAM,6BAA6BF,MAAM,KAAKhB,OAAO,KAAKtD,KAAK,eAAe1F,UAAU,cAAcmK,QAAQ,YAAnH,UACE,sBAAMC,EAAE,oKACR,sBAAMC,SAAS,UAAUD,EAAE,kPAE7B,cAACE,EAAA,EAAD,CACEnK,GAAG,OACHoK,UAAU,SACV7L,KAAK,KACL8L,KAAK,SACL,cAAY,iBAMtB,eAACT,EAAA,EAAKpB,KAAN,CAAW/J,QAAS,kBAAM,EAAKQ,SAAS,CAACiI,MAAO,EAAKrI,MAAMqI,QAAQtJ,MAAO,CAAC0M,cAAe,GAA1F,UACE,cAACV,EAAA,EAAKW,KAAN,CAAW3M,MAAO,CAAC4M,QAAS,OAAQC,eAAgB,UAApD,SACA,4BAAI5N,KAAKL,MAAMuE,QAAQ1D,OAAOqN,MAAM,EAAE,IAAM,UAE5C,eAACzC,EAAA,EAAD,CAAOC,UAAQ,EAAChB,KAAMrK,KAAKgC,MAAMqI,KAAMkB,OAAQvL,KAAK0M,YAAalB,UAAU,EAA3E,UACE,cAACJ,EAAA,EAAMK,OAAP,CAAcqC,aAAW,EAAzB,SACE,cAAC1C,EAAA,EAAMM,MAAP,UAAc1L,KAAKL,MAAMuE,QAAQ6H,SAEnC,eAACX,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAa3K,MAAO,CAAC6F,MAAOqD,EAAejK,KAAKL,MAAMuE,QAAQA,SAAU3C,UAAW,SAAUH,aAAc,IAA3G,sBAA0HpB,KAAKL,MAAMuE,QAAQA,QAA7I,OACA,4BAAIlE,KAAKL,MAAMuE,QAAQ1D,SACvB,cAACM,EAAA,EAAD,CAAWC,MAAO,CAACiL,OAAQ,KAA3B,SAAiC,cAAC,EAAD,CAAU9G,KAAMlF,KAAK4M,gC,GApE9CrJ,IAAM1B,W,UCFtB+H,I,OAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACV/I,UAAW,OAITiJ,GAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAGR8D,GAAkB,CACtB,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MAGHC,G,kDACF,WAAYrO,GAAQ,IAAD,uBACf,cAAMA,IAYVsO,cAAiB,CACf/M,WAAY,QAdK,EAiBnB4L,YAAc,SAACoB,GAAgB,IAAD,EAC5BA,EAAaA,GAA0B,EAAKlM,MAAMkM,YAClD,IAAK5L,WAAU6L,kBAAf,oBAAoCD,IAAY1L,MAAK,SAAC0C,GAClD,EAAK9C,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BmI,SAAUjF,EAAKA,QAC7C,EAAK9C,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BoM,cAAe,EAAKC,iBAAiBnJ,EAAKA,aArB3D,EA0BnBoJ,kBAAoB,WAClB,IAAIC,EAAQ,IAAIzK,KACZoK,EAAa,CAACK,EAAMC,cAAeD,EAAME,WAAW,EAAGF,EAAMG,WACjE,EAAKtM,SAAS,CAAC8L,WAAYA,IAC3B,EAAKpB,YAAYoB,IA9BA,EAiCnBS,eAAiB,SAAC1M,GAChB,IAAIwC,EAAQmK,SAASb,GAAgB9L,EAAM4M,WAAWhB,MAAM,EAAE,KAC1DnJ,EAAMkK,SAAS3M,EAAM4M,WAAWhB,MAAM,EAAE,KACxCrJ,EAAOoK,SAAS3M,EAAM4M,WAAWhB,MAAM,GAAG,KAC9C,EAAKzL,SAAS,CAAC8L,WAAY,CAAC1J,EAAMC,EAAOC,KACzC,EAAKpC,UAAU6L,kBAAkB3J,EAAMC,EAAOC,GAAKlC,MAAK,SAAC0C,GACrD,EAAK9C,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BmI,SAAUjF,EAAKA,QAC7C,EAAK9C,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BoM,cAAe,EAAKC,iBAAiBnJ,EAAKA,aAxC3D,EAsEnB4J,eAAiB,SAAC3E,GAChB,OACE,cAACrJ,EAAA,EAAD,UACGqJ,EAASW,KAAI,SAAC5G,GAAD,OACd,cAAC6K,EAAA,EAAD,CAAMhO,MAAO,CAAC0M,cAAe,IAA7B,SACE,cAAC,GAAD,CAA8BX,YAAa,EAAKA,YAAa5I,QAASA,EAAS5B,UAAW,EAAKA,WAAjF4B,EAAQ8K,gBAzE1B,IAAM/K,EAAc,EAAKtE,MAAMgB,UAAUsD,YAAYA,YAFtC,OAGf,EAAK3B,UAAY,IAAI0B,EAAUC,GAC/B,EAAKjC,MAAQ,CACXmI,SAAU,GACViE,cAAe,GACfF,WAAY,IAEd,EAAKS,eAAiB,EAAKA,eAAe9O,KAApB,gBACtB,EAAKwO,iBAAmB,EAAKA,iBAAiBxO,KAAtB,gBAVT,E,oDA6CnB,SAAiBsK,GACf,GAAIA,EAAS8E,QAAU,EACrB,MAAO,GAGT,IAAIb,EAAgB,GACpB,IAAK,IAAIc,KAAMjF,GACbmE,EAAcc,GAAM,CAClB,GAAMA,EACN,MAASA,EACT,MAAS,EACT,MAASjF,GAAeiF,IAXH,MAIHnE,EAJG,cAcHZ,GAdG,yBAcdjG,EAdc,QAevBK,OAAOsG,KAAKZ,IAAgBa,KAAI,SAAAqE,GAAG,OACjCf,EAAce,GAAd,OAA+BjL,EAAQ8G,aAAamE,OAFxD,2BAAiC,IAdR,8BAmBzB,IAAK,IAAIC,KAAMnF,GACbmE,EAAcgB,GAAd,OAhBoBrE,EAgBsBqD,EAAcgB,GAAd,MAA6BjF,EAAS8E,OAhB/ChE,WAAWF,GAAKG,QAAQ,IAkB3D,OAAO3G,OAAO8K,OAAOjB,K,oBAevB,WACE,OACI,qBAAKpL,UAAW4G,GAAOE,KAAvB,SACE,eAAChJ,EAAA,EAAD,WACE,cAAC,EAAD,CAAYb,SAAUD,KAAKL,MAAMM,SAAUqC,UAAWtC,KAAKsC,YAC3D,cAAC,IAAD,CACIrB,UAAW,CAACC,WAAY,OAAQC,SAAW,IAC3CJ,MAAO,CAACC,UAAU,KAAMI,aAAc,QACtCC,gBAAiB,oCACjBC,sBAAuB,EAJ3B,kBAMA,oBAAIP,MAAO,CAACQ,UAAW,SAAUqF,MAAO,OAAQxF,aAAc,IAA9D,uCACA,cAACN,EAAA,EAAD,UACE,eAACsL,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAKqC,GAAI,EAAGvO,MAAO,CAACiL,OAAQ,IAAK3D,QAAS,GAA1C,SAA8C,cAAC,KAAD,CAAUtH,MAAO,CAACwO,WAAY,WAAYC,WAAYxP,KAAK2O,mBACzG,cAAC1B,EAAA,EAAD,CAAKqC,GAAI,EAAT,SAAY,cAACxO,EAAA,EAAD,CAAWC,MAAO,CAAC0O,SAAU,WAAWzC,MAAM,IAAK3F,MAAM,IAAK2E,OAAQ,KAAtE,SAA6E,cAAC,EAAD,CAAU9G,KAAMlF,KAAKgC,MAAMoM,oBACpH,cAACnB,EAAA,EAAD,CAAKqC,GAAI,EAAGvO,MAAO,CAACiL,OAAQ,IAAK0D,YAAY,GAAIC,UAAW,UAA5D,SACI3P,KAAK8O,eAAe9O,KAAKgC,MAAMmI,0B,GApGlC5G,IAAM1B,WA8GV0K,eAAW3C,GAAX2C,CAAmBzK,YAAakM,K,UClFhC4B,GAvCD,SAACjQ,GACX,OACA,cAAC,KAAD,CACIuF,KAAMvF,EAAMuF,KACZ2F,KAAMlL,EAAMkQ,OACZC,QAAQ,UACRC,YAAY,QACZtO,OAAQ,CAAE0F,IAAK,GAAIH,MAAO,GAAII,OAAQ,GAAIC,KAAM,IAChDM,YAAa,CAAE5C,KAAM,SACrBiL,gBAAiB,GACjBC,QAAS,GACTC,SAAU,CAAErG,MAAO,cACnBsG,eAAgB,EAChBC,OAAQ,CAAEC,OAAQ,UAClBC,UAAU,WACVC,aAAa,SACb3H,QAAS,CACL,CACIC,OAAQ,YACRC,UAAW,SACXE,YAAa,IACbC,YAAa,GACbE,UAAW,GACXC,WAAY,GACZC,cAAe,OACfG,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJ5I,MAAO,CACHsI,cAAe,eLvDrCO,GAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACV/I,UAAW,MAIT6O,GAAS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEEW,GAAgB,GACbC,GAAI,EAAGA,GAAIZ,GAAOZ,OAAQwB,KAAK,CAEpCD,GADYX,GAAOY,KACIA,GAG3B,IAUMC,G,kDACF,WAAY/Q,GAAQ,IAAD,uBACf,cAAMA,IAiBVuC,aAAe,SAACsC,EAAMC,GAClB,IAAIkM,EAAY,EAAK3O,MAAM2C,eACvBgM,EAAUnM,GAAMoM,IAAInM,GACpBkM,EAAUnM,GAAMqM,OAAOpM,GAGvBkM,EAAUnM,GAAMsM,IAAIrM,GAExB,EAAKnC,UAAUyO,kBAAkBJ,GAAWnO,MACxC,SAAC0C,GACG,EAAK9C,SAAS,CAAC4O,iBAAkB9L,EAAKA,OACtC,EAAK9C,SAAS,CAACuC,eAAgBgM,QA3BvC,IAAIhM,EAAiB,CACjB,KAAM,IAAIsM,IACV,KAAM,IAAIA,IACV,KAAM,IAAIA,KAEd,EAAKjP,MAAQ,CACT2C,eAAgBA,EAChBqM,iBAAkB,IAEtB,IAAM/M,EAAc,EAAKtE,MAAMgB,UAAUsD,YAAYA,YAXtC,OAYf,EAAK3B,UAAY,IAAI0B,EAAUC,GAE/B,EAAK/B,aAAe,EAAKA,aAAarC,KAAlB,gBACpB,EAAKqR,UAAY,EAAKA,UAAUrR,KAAf,gBAfF,E,6CAkCnB,WACI,IAAIsR,EAAa,GACbR,EAAY3Q,KAAKgC,MAAM2C,eAK3B,OAJAJ,OAAOsG,KAAK8F,GAAWS,SAAQ,SAAC5M,GAAD,OAC3BM,MAAMC,KAAK4L,EAAUnM,IAAO4M,SACxB,SAACC,GAAD,OAAOF,EAAWG,KAAKD,EAAI,IAAM7M,SAElC2M,I,oBAGX,WAAU,IAAD,OACL,OACI,qBAAKnO,UAAW4G,GAAOE,KAAvB,SACE,eAAChJ,EAAA,EAAD,WACE,cAAC,EAAD,CAAYb,SAAUD,KAAKL,MAAMM,SAAUqC,UAAWtC,KAAKsC,YAC3D,cAAC,IAAD,CACIrB,UAAW,CAACC,WAAY,OAAQC,SAAW,QAC3CJ,MAAO,CAACC,UAAU,KAAMI,aAAc,QACtCC,gBAAiB,oCACjBC,sBAAuB,EAJ3B,wBAME,CAAC,KAAM,KAAM,MAAOwJ,KAAI,SAAAtG,GACtB,OACA,eAACkC,EAAA,EAAD,CAAU1D,UAAU,gBAAgBuO,UAAU,UAA9C,UACI,cAAC7K,EAAA,EAASJ,OAAV,CACIkL,SAAU,WAAO,EAAKpP,SAAS,CAACoC,KAAMA,KACtC7C,QAAQ,YACRkB,GAAG,6BAHP,SAKK2B,IAEL,cAACkC,EAAA,EAASG,KAAV,CAAelF,QAAQ,OAAvB,SACIkO,GAAO/E,KAAI,SAAArG,GAAK,OAChB,cAACiC,EAAA,EAASC,KAAV,CAAexD,GAAG,SAAlB,SACI,cAACP,EAAA,EAAK6O,MAAN,CACInO,KAAM,WACNT,GAAI4B,EACJiN,MAAOjN,EACPpB,SAAU,kBAAM,EAAKnB,aAAasC,EAAMC,mBAO5D,qBAAK1D,MAAO,CAACiL,OAAQ,IAAKyB,cAAe,IAAzC,SACA,cAAC,GAAD,CAAOoC,OAAQ7P,KAAKkR,YAAahM,KAAMlF,KAAKgC,MAAMgP,8B,GAjFzCzN,IAAM1B,WAyFhB0K,eAAW3C,GAAX2C,CAAmBzK,YAAa4O,KMjIzCiB,G,kDAEJ,WAAYhS,GAAQ,IAAD,8BACjB,cAAMA,IACDM,SAAW,IAAI2R,WAAS,CAC3BC,OAAQ,+CACRC,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,cAExC,EAAKC,mBAAL,uCAA0B,WAAOC,EAAWC,GAAlB,SAAAtS,EAAA,sDACxBJ,EAAM2S,QAAQC,QAAQC,wBAAcH,EAAaL,OAAOC,SAASC,SADzC,2CAA1B,oCAAAlS,KAAA,eAPiB,E,0CAYnB,WACE,OACE,cAAC,IAAD,CAAUC,SAAUD,KAAKC,SAAUkS,mBAAoBnS,KAAKmS,mBAA5D,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWjT,IACjC,cAAC,IAAD,CAAOgT,KAAK,YAAYC,UAAWC,MACnC,cAAC,IAAD,CAAaF,KAAK,QAAQC,UAAWzI,EAAM2I,OAAQ,SAAClT,GAAD,OAAW,cAAC,EAAD,eAAUA,OACxE,cAAC,IAAD,CAAa+S,KAAK,QAAQC,UAAW3E,GAAM6E,OAAQ,SAAClT,GAAD,OAAW,cAAC,GAAD,eAAUA,OACxE,cAAC,IAAD,CAAa+S,KAAK,cAAcC,UAAWjC,GAAYmC,OAAQ,SAAClT,GAAD,OAAW,cAAC,GAAD,eAAgBA,gB,GAtBjFkC,aA6BJ8P,MChCTW,GAAUQ,cAEhBC,IAASF,OACP,cAAC,IAAD,CAAQP,QAASA,GAAjB,SACE,cAAC,GAAD,CAAMA,QAASA,OAEhBU,SAASC,eAAe,W","file":"static/js/main.76069e16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withOktaAuth } from '@okta/okta-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport {Redirect} from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.signIn = this.signIn.bind(this);\n    this.signInAsGuest = this.signInAsGuest.bind(this);\n  }\n  \n  async signIn() {\n    await this.props.oktaAuth.signInWithRedirect();\n  }\n\n  async signInAsGuest(event) {\n    event.preventDefault();\n    const transaction = await this.props.oktaAuth.signIn({\n      username: \"guest@okta.com\",\n      password: \"anonymous!\"\n    });\n\n    if (transaction.status === 'SUCCESS') {\n      this.props.oktaAuth.signInWithRedirect({sessionToken: transaction.sessionToken})\n    } else {\n      throw new Error('Could not sign in: ' + transaction.status);\n    }\n  }\n\n  render() {\n    if (this.props.authState.isAuthenticated) {\n      return <Redirect to=\"/home\"/>\n    }\n    else {\n      return (\n      <Container>\n          <div style={{marginTop: 300}}>\n          <BlinkingCursorTextBuilder\n          textStyle={{fontWeight : \"bold\", fontSize : \"50px\"}}\n          style={{marginBottom : \"10px\"}}\n          cursorComponent={<div>|</div>}\n          blinkTimeAfterFinish={-1}>Welcome  to  Mood  Tracker\n          </BlinkingCursorTextBuilder>\n          </div>\n          <div style={{marginTop: 30, textAlign: 'center'}}>\n          <Button style={{margin: 10}} size=\"lg\" variant=\"primary\" onClick={this.signIn}>Login with Okta</Button>\n          <Button style={{margin: 10}} size=\"lg\" variant=\"secondary\" onClick={this.signInAsGuest}>Continue as Guest</Button>\n          </div>\n      </Container>\n      );\n    }\n  }\n}\n\nexport default withOktaAuth(Login);","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nclass EmotionForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.apiClient.createEmotion({\"status\": this.state.value}).then(\n            (newEmotion) => this.props.showModal(newEmotion)\n        );\n        event.target.reset();\n    }\n\n    render() {\n        return (\n        <Form id='myForm' onSubmit={this.handleSubmit} style={{marginTop: 50}}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control as=\"textarea\" rows={3} onChange={this.handleChange}/>\n            </Form.Group>\n            <Button variant=\"dark\" type=\"submit\">Submit</Button>\n        </Form>\n        );\n    }\n}\n\nexport default EmotionForm;","import axios from 'axios';\n\n// const BASE_URI = 'http://localhost:4433';\nconst BASE_URI = 'https://mood-tracker-sg.herokuapp.com';\n// const BASE_URI = 'http://0.0.0.0:5000';\n\nconst client = axios.create({\n baseURL: BASE_URI,\n json: true\n});\n\nconst monthToMonthNum = {\n  \"Jan\": \"01\",\n  \"Feb\": \"02\",\n  \"Mar\": \"03\",\n  \"Apr\": \"04\",\n  \"May\": \"05\",\n  \"Jun\": \"06\",\n  \"Jul\": \"07\",\n  \"Aug\": \"08\",\n  \"Sep\": \"09\",\n  \"Oct\": \"10\",\n  \"Nov\": \"11\",\n  \"Dec\": \"12\",\n};\n\nconst offset = new Date().getTimezoneOffset();\n\nclass APIClient {\n  constructor(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  createEmotion(emotion) {\n    return this.perform('post', `/emotions/${offset}/`, emotion);\n  }\n\n  getEmotions() {\n    return this.perform('get', `/emotions/${offset}/`);\n  }\n\n  updateEmotion(emotion_id, emotion_name) {\n    let obj = Object({\"emotion_name\": emotion_name});\n    return this.perform('put', `/emotions/${emotion_id}/${offset}/`, obj);\n  }\n\n  deleteEmotion(emotion_id) {\n    return this.perform('delete', `/emotions/${emotion_id}/${offset}/`);\n  }\n\n  deleteAllEmotions() {\n    return this.perform('delete', `/emotions/${offset}/`);\n  }\n\n  getEmotionsByDate(year, month, day) {\n    return this.perform('get', `/emotions/${year}/${month}/${day}/${offset}/`);\n  }\n\n  getEmotionsByMonthAndYear(year, month) {\n    return this.perform('get', `/emotions/${year}/${month}/${offset}/`);\n  }\n\n  getEmotionsByYear(year) {\n    return this.perform('get', `/emotions/${year}/${offset}/`);\n  }\n\n  downloadModel() {\n    return this.perform('get', `/download_model/`);\n  }\n\n  uploadStatus(emotion_id, status, emotion_name=null) {\n    let obj = Object({\"emotion_id\": emotion_id, \"status\": status, \"emotion_name\": emotion_name});\n    return this.perform('post', `/upload_status/`, obj);\n  }\n\n  uploadModel() {\n    return this.perform('get', `/upload_model/`);\n  }\n\n  generateRadarData(yearMonthPairs) {\n    let apiData = {};\n    for (let y in yearMonthPairs) {\n      apiData[y] = Array.from(yearMonthPairs[y]); // python does not accept Set()\n    }\n    return this.perform('post', `/generate_radar_data/${offset}/`, apiData);\n  }\n\n  async perform (method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data,\n      headers: {\n        Authorization: `Bearer ${this.accessToken}`\n      }\n    }).then(resp => {\n      return resp.data ? resp.data : resp.error;\n    })\n  }\n}\n\nexport default APIClient;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass EmotionNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\"\n    };\n    this.logout = this.logout.bind(this);\n  }\n\n  logout = (e) => {\n    e.preventDefault();\n    if (this.state.userName == \"Guest\") {\n      this.props.apiClient.deleteAllEmotions().then((value) => {\n        this.props.oktaAuth.signOut();\n      });\n    }\n    else {\n      this.props.apiClient.uploadModel().then((value) => {\n        this.props.oktaAuth.signOut();\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.oktaAuth.getUser().then((user) => {\n      if (user[\"family_name\"] != \"Guest\") {\n        this.setState({userName: user[\"name\"]});\n      }\n      else {\n        this.setState({userName: \"Guest\"});\n      }\n    });\n  }\n\n  render() {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" style={{marginBottom: 50, marginTop: 10}}>\n        <Container>\n          <Navbar.Brand href=\"\\home\">Mood Tracker</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/data\">Data</Nav.Link>\n              <Nav.Link href=\"/statistics\">Statistics</Nav.Link>\n            </Nav>\n            <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle as={Nav.Link} style={{\n                color: \"black\"\n                }}>\n{this.state.userName}\n              </Dropdown.Toggle>\n              <Dropdown.Menu align=\"end\" style={{minWidth: \"5rem\", right: \"10%\"}}>\n                <NavDropdown.Item as={Button} onClick={this.logout}>Log Out</NavDropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default EmotionNav;","import React from 'react';\nimport APIClient from '../apiClient';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withOktaAuth } from '@okta/okta-react';\nimport Container from 'react-bootstrap/Container';\nimport EmotionNav from \"../EmotionNav\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Radar from \"../Radar\";\nimport Form from 'react-bootstrap/Form';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n});\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n]\nconst monthsToIndex = {}\nfor (let i = 0; i < months.length; i++) {\n    let month = months[i];\n    monthsToIndex[month] = i;\n}\n\nconst emotionToColor = {\n    \"Anger\": \"#e8c1a0\",\n    \"Fear\": \"#f47560\",\n    \"Joy\": \"#f1e15b\",\n    \"Love\": \"#e8a838\",\n    \"Sadness\": \"#61cdbb\",\n    \"Surprise\": \"#97e3d5\",\n  }\n\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        let yearMonthPairs = {\n            2019: new Set(),\n            2020: new Set(),\n            2021: new Set()\n        }\n        this.state = {\n            yearMonthPairs: yearMonthPairs,\n            radarEmotionData: []\n        };\n        const accessToken = this.props.authState.accessToken.accessToken;\n        this.apiClient = new APIClient(accessToken);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.getMonths = this.getMonths.bind(this);\n    }\n\n    handleChange = (year, month) => {\n        let tempPairs = this.state.yearMonthPairs;\n        if (tempPairs[year].has(month)) {\n            tempPairs[year].delete(month);\n        }\n        else {\n            tempPairs[year].add(month)\n        }\n        this.apiClient.generateRadarData(tempPairs).then(\n            (data) => {\n                this.setState({radarEmotionData: data.data});\n                this.setState({yearMonthPairs: tempPairs});\n            }\n        );\n    }\n\n    getMonths() {\n        let tempMonths = [];\n        let tempPairs = this.state.yearMonthPairs;\n        Object.keys(tempPairs).forEach((year) => \n            Array.from(tempPairs[year]).forEach(\n                (m) => tempMonths.push(m + \" \" + year)\n            ))\n        return tempMonths;\n    }\n\n    render() {\n        return (\n            <div className={styles.root}>\n              <Container>\n                <EmotionNav oktaAuth={this.props.oktaAuth} apiClient={this.apiClient}></EmotionNav>\n                <BlinkingCursorTextBuilder\n                    textStyle={{fontWeight :\"bold\", fontSize : \"50px\"}}\n                    style={{marginTop:\"10\", marginBottom :\"10px\"}}\n                    cursorComponent={<div>|</div>}\n                    blinkTimeAfterFinish={-1}>Statistics\n                </BlinkingCursorTextBuilder>\n                {([2019, 2020, 2021]).map(year => {\n                    return (\n                    <Dropdown className=\"d-inline mx-2\" autoClose=\"outside\">\n                        <Dropdown.Toggle \n                            onToggle={() => {this.setState({year: year})}} \n                            variant=\"secondary\" \n                            id=\"dropdown-autoclose-outside\"\n                        >\n                            {year}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu variant=\"dark\">{\n                            months.map(month =>\n                            <Dropdown.Item as=\"button\">\n                                <Form.Check \n                                    type={\"checkbox\"}\n                                    id={month}\n                                    label={month}\n                                    onChange={() => this.handleChange(year, month)}\n                                />\n                            </Dropdown.Item>)\n                        }\n                        </Dropdown.Menu>\n                    </Dropdown>);}\n                )}\n                <div style={{height: 500, paddingBottom: 10}}>\n                <Radar months={this.getMonths()} data={this.state.radarEmotionData} />\n                </div>\n              </Container>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(withOktaAuth(Statistics));","import { ResponsivePie } from '@nivo/pie'\n\nfunction PieChart(props) {\n    return (\n    <ResponsivePie\n        data={props.data}\n        margin={{ top: 40, right: 40, bottom: 80, left: 40 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'Fear'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Joy'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Surprise'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Love'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Anger'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'Sadness'\n                },\n                id: 'lines'\n            },\n        ]}\n        legends={[\n            {\n                anchor: 'bottom',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 70,\n                itemsSpacing: 12,\n                itemWidth: 60,\n                itemHeight: 25,\n                itemTextColor: '#999',\n                itemDirection: 'left-to-right',\n                itemOpacity: 1,\n                symbolSize: 15,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n    )\n}\nexport default PieChart;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { withOktaAuth } from '@okta/okta-react';\nimport EmotionForm from \"../EmotionForm\"\nimport Container from 'react-bootstrap/Container';\nimport APIClient from '../apiClient';\nimport EmotionNav from \"../EmotionNav\";\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Modal from 'react-bootstrap/Modal';\nimport PieChart from \"../PieChart\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n  ml3: {\n    fontWeight: 900,\n    fontSize: 3.5\n  }\n});\n\nconst emotionToColor = {\n  \"Anger\": \"#e8c1a0\",\n  \"Fear\": \"#f47560\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      emotions: [],\n      currEmotion: null,\n      show: false,\n      disagreeShow: false,\n    };\n    const accessToken = this.props.authState.accessToken.accessToken;\n    this.apiClient = new APIClient(accessToken);\n    \n    this.showModal =  this.showModal.bind(this);\n    this.generateModal = this.generateModal.bind(this);\n\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleDisagree = this.handleDisagree.bind(this);\n    \n    this.model = null;\n  }\n\n  componentDidMount() {\n    this.apiClient.getEmotions().then((data) =>\n      this.setState({...this.state, emotions: data.data})\n    );\n    this.model = this.apiClient.downloadModel();\n  }\n\n  showModal(newEmotion) {\n    this.setState({currEmotion: newEmotion.data});\n    this.setState({show: true});\n  }\n\n  getEmotionData(emotion) {\n    function transformNum(num) {return parseFloat(num).toFixed(2)}\n    return (\n      Object.keys(emotionToColor).map(e => (\n      {\n        \"id\": e,\n        \"label\": e,\n        \"value\": transformNum(emotion.emotion_data[e]),\n        \"color\": emotionToColor[e],\n      }))\n    )\n  }\n\n  handleStatus(emotion_name=null) {\n    this.setState({show: false});\n    this.setState({disagreeShow: false});\n    let emotion_id = this.state.currEmotion.id;\n    let status = this.state.currEmotion.status;\n    // this.apiClient.uploadStatus(emotion_id, status, emotion_name);\n    if (emotion_name !== null) {\n      this.apiClient.updateEmotion(emotion_id, emotion_name);\n    }\n  }\n\n  handleDisagree() {\n    this.setState({show: false});\n    this.setState({disagreeShow: true});\n  }\n\n  generateDisagreeModal() {\n    return (\n      <Modal centered backdrop=\"static\" show={this.state.disagreeShow} onHide={!this.state.disagreeShow} keyboard={false}>\n        <Modal.Header style={{textAlign: 'center'}}>\n          <Modal.Title>Disagree</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Modal.Title style={{color: emotionToColor[this.state.currEmotion.emotion], textAlign: 'center', marginBottom: 20}}>The model predicted {this.state.currEmotion.emotion} for:</Modal.Title>\n          <p style={{textAlign: 'center'}}>{this.state.currEmotion.status}</p>\n          <Modal.Title style={{textAlign: 'center'}}>What is the correct emotion?</Modal.Title>\n        </Modal.Body>\n        <Modal.Footer>\n          {\n            Object.keys(emotionToColor).map(emotion => \n            <Button key={emotion} style={{backgroundColor: emotionToColor[emotion], border: 'none'}} \n              onClick={() => this.handleStatus(emotion)}>\n              {emotion}\n            </Button>)\n          }\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  generateModal() {\n    if (this.state.show) {\n      return (\n        <Modal centered backdrop=\"static\" show={this.state.show} onHide={() => this.setState({show: false})} keyboard={false}>\n          <Modal.Header>\n            <Modal.Title>{this.state.currEmotion.date}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Modal.Title style={{color: emotionToColor[this.state.currEmotion.emotion], textAlign: 'center', marginBottom: 20}}>You felt {this.state.currEmotion.emotion}.</Modal.Title>\n            <p style={{textAlign: 'center'}}>{this.state.currEmotion.status}</p>\n            <Container style={{height: 400}}><PieChart data={this.getEmotionData(this.state.currEmotion)}/></Container>\n          </Modal.Body>\n          <Modal.Footer>\n          <Button style={{backgroundColor: \"#61cdbb\", border: 'none'}} onClick={() => this.handleStatus()}>\n            Agree\n          </Button>\n          <Button style={{backgroundColor: \"#f47560\", border: 'none'}} onClick={() => this.handleDisagree()}>\n            Disagree\n          </Button>\n        </Modal.Footer>\n        </Modal>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <Container>\n          <EmotionNav oktaAuth={this.props.oktaAuth} apiClient={this.apiClient}></EmotionNav>\n          <BlinkingCursorTextBuilder\n            textStyle={{fontWeight :\"bold\", fontSize : \"50px\"}}\n            style={{marginTop:\"200px\", marginBottom :\"10px\"}}\n            cursorComponent={<div>|</div>}\n            blinkTimeAfterFinish={-1}>Welcome  to  Mood  Tracker\n          </BlinkingCursorTextBuilder>\n          <h4 style={{textAlign: 'center', paddingTop: 20, color: 'grey'}}>Enter your daily status below.</h4>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js\"></script>\n          <Row>\n            <EmotionForm showModal={this.showModal} showAlert={this.showAlert} apiClient={this.apiClient}/>\n            {this.state.disagreeShow ? this.generateDisagreeModal(): this.generateModal()}\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(withOktaAuth(Home));","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport PieChart from \"../PieChart\";\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst emotionToColor = {\n  \"Anger\": \"#e8c1a0\",\n  \"Fear\": \"#f47560\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nclass Emotion extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showDeleteButton: true,\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    function transformNum(num) {return parseFloat(num).toFixed(2)}\n    this.emotionData = \n      Object.keys(emotionToColor).map(emotion => (\n      {\n        \"id\": emotion,\n        \"label\": emotion,\n        \"value\": transformNum(this.props.emotion.emotion_data[emotion]),\n        \"color\": emotionToColor[emotion],\n      }));\n  }\n\n  handleClick(event) {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  handleDelete(event) {\n    this.setState({showDeleteButton: false});\n    this.props.apiClient.deleteEmotion(this.props.emotion.id);\n    this.props.updateState();\n    this.props.updateState();\n  }\n\n  render() {\n    return (\n      <Card style={{background: emotionToColor[this.props.emotion.emotion], width: '20rem'}}>\n        <Card.Header>\n          <Row>\n            <Col>\n              <button onClick={this.handleDelete} style={{border: 0, backgroundColor: 'transparent'}}>\n              { this.state.showDeleteButton ? \n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\" >\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                  <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                </svg> : \n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                /> }\n              </button>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body onClick={() => this.setState({show: !this.state.show})} style={{paddingBottom: 0}}>\n          <Card.Text style={{display: 'flex', justifyContent: 'center'}}>\n          <p>{this.props.emotion.status.slice(0,30) + \"...\"}</p>\n            </Card.Text>\n          <Modal centered show={this.state.show} onHide={this.handleClick} keyboard={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>{this.props.emotion.date}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Modal.Title style={{color: emotionToColor[this.props.emotion.emotion], textAlign: 'center', marginBottom: 20}}>You felt {this.props.emotion.emotion}.</Modal.Title>\n              <p>{this.props.emotion.status}</p>\n              <Container style={{height: 350}}><PieChart data={this.emotionData}/></Container>\n            </Modal.Body>\n          </Modal>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\n\n\n\nexport default Emotion;","import React from 'react';\nimport APIClient from '../apiClient';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withOktaAuth } from '@okta/okta-react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport EmotionNav from \"../EmotionNav\";\nimport Grid from '@material-ui/core/Grid';\nimport Emotion from \"../Emotion\";\nimport PieChart from \"../PieChart\";\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Calendar from 'react-calendar'; \nimport 'react-calendar/dist/Calendar.css';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n});\n\nconst emotionToColor = {\n  \"Anger\": \"#f47560\",\n  \"Fear\": \"#e8c1a0\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nconst monthToMonthNum = {\n  \"Jan\": \"01\",\n  \"Feb\": \"02\",\n  \"Mar\": \"03\",\n  \"Apr\": \"04\",\n  \"May\": \"05\",\n  \"Jun\": \"06\",\n  \"Jul\": \"07\",\n  \"Aug\": \"08\",\n  \"Sep\": \"09\",\n  \"Oct\": \"10\",\n  \"Nov\": \"11\",\n  \"Dec\": \"12\",\n};\n\nclass Data extends React.Component {\n    constructor(props) {\n        super(props);\n        const accessToken = this.props.authState.accessToken.accessToken;\n        this.apiClient = new APIClient(accessToken);\n        this.state = {\n          emotions: [],\n          aggregateData: [],\n          currentDay: [],\n        };\n        this.handleClickDay = this.handleClickDay.bind(this);   \n        this.getAggregateData = this.getAggregateData.bind(this);\n    }\n\n    calendarStyle = ({\n      fontWeight: 'bold',\n    });\n\n    updateState = (currentDay) => {\n      currentDay = currentDay ? currentDay : this.state.currentDay;\n      this.apiClient.getEmotionsByDate(...currentDay).then((data) => {\n          this.setState({...this.state, emotions: data.data});\n          this.setState({...this.state, aggregateData: this.getAggregateData(data.data)});\n        }\n      )\n    }\n\n    componentDidMount = () => {\n      let today = new Date();\n      let currentDay = [today.getFullYear(), today.getMonth()+1, today.getDate()];\n      this.setState({currentDay: currentDay});\n      this.updateState(currentDay);\n    }\n\n    handleClickDay = (value) => {\n      let month = parseInt(monthToMonthNum[value.toString().slice(4,7)]);\n      let day = parseInt(value.toString().slice(8,10));\n      let year = parseInt(value.toString().slice(11,15));\n      this.setState({currentDay: [year, month, day]});\n      this.apiClient.getEmotionsByDate(year, month, day).then((data) => {\n          this.setState({...this.state, emotions: data.data});\n          this.setState({...this.state, aggregateData: this.getAggregateData(data.data)});\n        }\n    );\n    }\n\n    getAggregateData(emotions) {\n      if (emotions.length <= 0) {\n        return [];\n      }\n      function transformNum(num) {return parseFloat(num).toFixed(2)}\n      var aggregateData = {}\n      for (var e1 in emotionToColor) { // set up dict\n        aggregateData[e1] = {\n          \"id\": e1,\n          \"label\": e1,\n          \"value\": 0,\n          \"color\": emotionToColor[e1],\n        }\n      }\n      for (const emotion of emotions) {\n        Object.keys(emotionToColor).map(key => ( // aggregate the data\n          aggregateData[key][\"value\"] += emotion.emotion_data[key]\n        ))\n      }\n      for (var e2 in emotionToColor) {\n        aggregateData[e2][\"value\"] = transformNum(aggregateData[e2][\"value\"] / emotions.length); // normalize the data\n      }\n      return Object.values(aggregateData);\n    }\n\n    renderEmotions = (emotions) => {\n      return (\n        <Container>\n          {emotions.map((emotion) => (\n          <Grid style={{paddingBottom: 25}}>\n            <Emotion key={emotion.aws_id} updateState={this.updateState} emotion={emotion} apiClient={this.apiClient} />\n          </Grid>\n          ))}\n        </Container>\n      );\n    }\n\n    render() {\n      return (\n          <div className={styles.root}>\n            <Container>\n              <EmotionNav oktaAuth={this.props.oktaAuth} apiClient={this.apiClient}></EmotionNav>\n              <BlinkingCursorTextBuilder\n                  textStyle={{fontWeight :\"bold\", fontSize : 50}}\n                  style={{marginTop:\"10\", marginBottom :\"10px\"}}\n                  cursorComponent={<div>|</div>}\n                  blinkTimeAfterFinish={-1}>Data\n              </BlinkingCursorTextBuilder>\n              <h4 style={{textAlign: 'center', color: 'grey', marginBottom: 50}}>Click on day to see data.</h4>\n              <Container>\n                <Row>\n                  <Col sm={4} style={{height: 400, padding: 0}}><Calendar style={{fontFamily: 'inherit'}} onClickDay={this.handleClickDay}/></Col>\n                  <Col sm={4}><Container style={{position: 'relative',width:600, left:-100, height: 400 }}><PieChart data={this.state.aggregateData}/></Container></Col>\n                  <Col sm={4} style={{height: 375, paddingLeft:80, overflowY: 'scroll'}}>\n                    { this.renderEmotions(this.state.emotions) }\n                  </Col>\n                </Row>\n              </Container>\n            </Container>\n          </div>\n      )\n    }\n}\n\nexport default withStyles(styles)(withOktaAuth(Data));","import { ResponsiveRadar } from '@nivo/radar';\n\nlet data = [\n    {\n      \"taste\": \"fruity\",\n      \"chardonay\": 22,\n      \"carmenere\": 105,\n      \"syrah\": 51\n    },\n    {\n      \"taste\": \"bitter\",\n      \"chardonay\": 120,\n      \"carmenere\": 75,\n      \"syrah\": 39\n    },\n    {\n      \"taste\": \"heavy\",\n      \"chardonay\": 34,\n      \"carmenere\": 31,\n      \"syrah\": 32\n    },\n    {\n      \"taste\": \"strong\",\n      \"chardonay\": 101,\n      \"carmenere\": 38,\n      \"syrah\": 70\n    },\n    {\n      \"taste\": \"sunny\",\n      \"chardonay\": 84,\n      \"carmenere\": 24,\n      \"syrah\": 76\n    }\n  ]\n\n\nconst Radar = (props) => {\n    return(\n    <ResponsiveRadar\n        data={props.data}\n        keys={props.months}\n        indexBy=\"emotion\"\n        valueFormat=\">-.2f\"\n        margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n        borderColor={{ from: 'color' }}\n        gridLabelOffset={36}\n        dotSize={10}\n        dotColor={{ theme: 'background' }}\n        dotBorderWidth={2}\n        colors={{ scheme: 'paired' }}\n        blendMode=\"multiply\"\n        motionConfig=\"wobbly\"\n        legends={[\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                translateX: -300,\n                translateY: -40,\n                itemWidth: 80,\n                itemHeight: 25,\n                itemTextColor: '#999',\n                symbolSize: 15,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n    )}\nexport default Radar;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { Security, LoginCallback, SecureRoute } from '@okta/okta-react';\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport Login from '../Login'\nimport Home from '../Home'\nimport Data from '../Data'\nimport Statistics from '../Statistics';\n\nclass Main extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.oktaAuth = new OktaAuth({\n      issuer: 'https://dev-51511124.okta.com/oauth2/default',\n      clientId: '0oa2lchc6k2h1T0Ug5d7',\n      redirectUri: window.location.origin + '/callback'\n    });\n    this.restoreOriginalUri = async (_oktaAuth, originalUri) => {\n      props.history.replace(toRelativeUrl(originalUri, window.location.origin));\n    };\n  }\n  \n  render() {\n    return (\n      <Security oktaAuth={this.oktaAuth} restoreOriginalUri={this.restoreOriginalUri}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/callback\" component={LoginCallback} />\n          <SecureRoute path=\"/home\" component={Home} render={(props) => <Home {...props}/>}/>\n          <SecureRoute path=\"/data\" component={Data} render={(props) => <Data {...props}/>}/>\n          <SecureRoute path=\"/statistics\" component={Statistics} render={(props) => <Statistics {...props}/>}/>\n        </Switch>\n      </Security>\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport Main from './Main';\nconst history = createBrowserHistory();\n\nReactDOM.render((\n  <Router history={history}>\n    <Main history={history} />\n  </Router>\n), document.getElementById('root'))"],"sourceRoot":""}