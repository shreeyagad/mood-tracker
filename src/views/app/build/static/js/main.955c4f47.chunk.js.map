{"version":3,"sources":["Login/index.js","EmotionForm/index.js","apiClient.js","EmotionNav/index.js","PieChart/index.js","Home/index.js","Emotion/index.js","Data/index.js","Radar/index.js","Statistics/index.js","Main/index.js","index.js"],"names":["Login","props","login","bind","a","this","oktaAuth","signInWithRedirect","authState","isAuthenticated","to","Container","style","marginTop","alignItems","justifyContent","textStyle","fontWeight","fontSize","marginBottom","cursorComponent","blinkTimeAfterFinish","textAlign","Button","size","variant","onClick","React","Component","withOktaAuth","EmotionForm","state","value","handleChange","handleSubmit","event","setState","target","preventDefault","apiClient","createEmotion","then","newEmotion","showModal","reset","Form","id","onSubmit","Group","className","controlId","Control","as","rows","onChange","type","client","axios","create","baseURL","json","APIClient","accessToken","emotion","perform","emotion_id","year","month","day","status","emotion_name","obj","Object","method","resource","data","url","headers","Authorization","resp","error","EmotionNav","logout","e","signOut","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","Link","float","PieChart","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","background","color","padding","stagger","rotation","lineWidth","spacing","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","styles","theme","root","flexGrow","ml3","emotionToColor","Home","emotions","show","currEmotion","disagreeShow","hideModal","generateModal","handleStatus","handleDisagree","model","getEmotions","downloadModel","keys","map","num","emotion_data","parseFloat","toFixed","uploadStatus","Modal","centered","backdrop","onHide","keyboard","Header","Title","Body","Footer","Row","backgroundColor","border","date","height","getEmotionData","paddingTop","src","showAlert","generateDisagreeModal","withStyles","Emotion","showDeleteButton","handleClick","handleDelete","emotionData","deleteEmotion","updateState","Card","width","Col","xmlns","viewBox","d","fillRule","Spinner","animation","role","paddingBottom","Text","display","slice","closeButton","monthToMonthNum","Data","calendarStyle","currentDay","getEmotionsByDate","aggregateData","getAggregateData","componentDidMount","today","Date","getFullYear","getMonth","getDate","handleClickDay","parseInt","toString","renderEmotions","Grid","length","e1","key","e2","values","sm","fontFamily","onClickDay","position","Radar","indexBy","valueFormat","gridLabelOffset","dotSize","dotColor","dotBorderWidth","colors","scheme","blendMode","motionConfig","months","Statistics","getEmotionsByYear","emotionCounts","ButtonGroup","paddingLeft","DropdownButton","title","m","Dropdown","Item","eventKey","generateData","Main","OktaAuth","issuer","clientId","redirectUri","window","location","origin","restoreOriginalUri","_oktaAuth","originalUri","history","replace","toRelativeUrl","exact","path","component","LoginCallback","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"mRAQMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,EAAKA,MAAMC,KAAX,gBAFI,E,gFAKnB,sBAAAC,EAAA,sEACQC,KAAKJ,MAAMK,SAASC,qBAD5B,gD,0EAIA,WACE,OAAIF,KAAKJ,MAAMO,UAAUC,gBAChB,cAAC,IAAD,CAAUC,GAAG,UAGlB,eAACC,EAAA,EAAD,WACE,qBAAKC,MAAO,CAACC,UAAW,IAAKC,WAAY,SAAUC,eAAgB,UAAnE,SACE,cAAC,IAAD,CACAC,UAAW,CAACC,WAAY,OAAQC,SAAW,QAC3CN,MAAO,CAACO,aAAc,QACtBC,gBAAiB,oCACjBC,sBAAuB,EAJvB,0CAOF,qBAAKT,MAAO,CAACU,UAAW,SAAUR,WAAY,SAAUC,eAAgB,UAAxE,SACE,cAACQ,EAAA,EAAD,CAAQX,MAAO,CAACC,UAAW,IAAKW,KAAK,KAAKC,QAAQ,QAAQC,QAASrB,KAAKH,MAAxE,sC,GAzBQyB,IAAMC,WAiCXC,cAAa7B,G,iCCHb8B,E,kDAlCX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTC,MAAO,IAGX,EAAKC,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBAPL,E,gDAUnB,SAAagC,GACT9B,KAAK+B,SAAS,CAACJ,MAAOG,EAAME,OAAOL,U,0BAGvC,SAAaG,GAAQ,IAAD,OAChBA,EAAMG,iBACNjC,KAAKJ,MAAMsC,UAAUC,cAAc,CAAC,OAAUnC,KAAK0B,MAAMC,QAAQS,MAC7D,SAACC,GAAD,OAAgB,EAAKzC,MAAM0C,UAAUD,MAEzCP,EAAME,OAAOO,U,oBAGjB,WACI,OACA,eAACC,EAAA,EAAD,CAAMC,GAAG,SAASC,SAAU1C,KAAK6B,aAActB,MAAO,CAACC,UAAW,IAAlE,UACI,cAACgC,EAAA,EAAKG,MAAN,CAAYC,UAAU,OAAOC,UAAU,+BAAvC,SACI,cAACL,EAAA,EAAKM,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGC,SAAUjD,KAAK4B,iBAExD,cAACV,EAAA,EAAD,CAAQE,QAAQ,OAAO8B,KAAK,SAA5B,2B,GA7Bc5B,IAAMC,W,SCE1B4B,E,OAASC,EAAMC,OAAO,CAC3BC,QAJgB,wBAKhBC,MAAM,IAkBDC,E,WACJ,WAAYC,GAAc,oBACxBzD,KAAKyD,YAAcA,E,iDAGrB,SAAcC,GACZ,OAAO1D,KAAK2D,QAAQ,OAAQ,aAAcD,K,2BAG5C,SAAcE,GACZ,OAAO5D,KAAK2D,QAAQ,SAAb,oBAAoCC,EAApC,Q,yBAGT,WACE,OAAO5D,KAAK2D,QAAQ,MAAb,gB,+BAGT,SAAkBE,EAAMC,EAAOC,GAC7B,OAAO/D,KAAK2D,QAAQ,MAAb,oBAAiCE,EAAjC,YAAyCC,EAAzC,YAAkDC,EAAlD,Q,uCAGT,SAA0BF,EAAMC,GAC9B,OAAO9D,KAAK2D,QAAQ,MAAb,oBAAiCE,EAAjC,YAAyCC,EAAzC,Q,+BAGT,SAAkBD,GAChB,OAAO7D,KAAK2D,QAAQ,MAAb,oBAAiCE,EAAjC,Q,2BAGT,WACE,OAAO7D,KAAK2D,QAAQ,MAAb,sB,0BAGT,SAAaC,EAAYI,GAA4B,IAApBC,EAAmB,uDAAN,KACxCC,EAAMC,OAAO,CAAC,WAAcP,EAAY,OAAUI,EAAQ,aAAgBC,IAC9E,OAAOjE,KAAK2D,QAAQ,OAAb,kBAAwCO,K,yBAGjD,WACE,OAAOlE,KAAK2D,QAAQ,MAAb,oB,4DAGT,WAAeS,EAAQC,EAAUC,GAAjC,SAAAvE,EAAA,+EACSoD,EAAO,CACZiB,SACAG,IAAKF,EACLC,OACAE,QAAS,CACPC,cAAc,UAAD,OAAYzE,KAAKyD,gBAE/BrB,MAAK,SAAAsC,GACN,OAAOA,EAAKJ,KAAOI,EAAKJ,KAAOI,EAAKC,UATxC,gD,kEAcanB,I,kBC3EToB,E,4MAEJC,OAAS,SAACC,GACRA,EAAE7C,iBACF,EAAKrC,MAAMK,SAAS8E,W,4CAGtB,WACE,OACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAK3E,MAAO,CAACO,aAAc,GAAIN,UAAW,IAApE,SACA,eAACF,EAAA,EAAD,WACE,cAAC0E,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,0BACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiB7C,GAAG,mBAApB,UACE,eAAC8C,EAAA,EAAD,CAAK3C,UAAU,UAAf,UACE,cAAC2C,EAAA,EAAIC,KAAL,CAAUJ,KAAK,QAAf,kBACA,cAACG,EAAA,EAAIC,KAAL,CAAUJ,KAAK,cAAf,2BAIF,cAACG,EAAA,EAAD,UACE,cAACrE,EAAA,EAAD,CAAQE,QAAQ,QAAQC,QAASrB,KAAK6E,OAAQtE,MAAO,CAACkF,MAAO,SAA7D,mC,GArBWnE,IAAMC,WA8BhBqD,I,iBCqEAc,MAvGf,SAAkB9F,GACd,OACA,cAAC,IAAD,CACI0E,KAAM1E,EAAM0E,KACZqB,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,wBAAyB,EACzBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,MACvDC,uBAAwB,GACxBC,uBAAuB,UACvBC,uBAAwB,EACxBC,mBAAoB,CAAEL,KAAM,SAC5BM,mBAAoB,GACpBC,mBAAoB,CAAEP,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,KAC9DO,KAAM,CACF,CACIrE,GAAI,OACJS,KAAM,cACN6D,WAAY,UACZC,MAAO,2BACP7F,KAAM,EACN8F,QAAS,EACTC,SAAS,GAEb,CACIzE,GAAI,QACJS,KAAM,eACN6D,WAAY,UACZC,MAAO,2BACPG,UAAW,GACXC,UAAW,EACXC,QAAS,KAGjBC,KAAM,CACF,CACIC,MAAO,CACH9E,GAAI,QAERA,GAAI,QAER,CACI8E,MAAO,CACH9E,GAAI,OAERA,GAAI,QAER,CACI8E,MAAO,CACH9E,GAAI,YAERA,GAAI,QAER,CACI8E,MAAO,CACH9E,GAAI,QAERA,GAAI,QAER,CACI8E,MAAO,CACH9E,GAAI,SAERA,GAAI,SAER,CACI8E,MAAO,CACH9E,GAAI,WAERA,GAAI,UAGZ+E,QAAS,CACL,CACIC,OAAQ,SACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,cAAe,OACfC,cAAe,gBACfC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJhI,MAAO,CACH0H,cAAe,eCjFrCO,EAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACVnI,UAAW,IAEboI,IAAK,CACHhI,WAAY,IACZC,SAAU,OAIRgI,EAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAGRC,E,kDACJ,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXC,MAAO,EACPoH,SAAU,GACV7G,UAAW,KACX8G,MAAM,EACNC,YAAa,KACbC,cAAc,GAEhB,EAAK5G,UAAa,EAAKA,UAAUxC,KAAf,gBAClB,EAAKqJ,UAAY,EAAKA,UAAUrJ,KAAf,gBACjB,EAAKsJ,cAAgB,EAAKA,cAActJ,KAAnB,gBACrB,EAAKuJ,aAAe,EAAKA,aAAavJ,KAAlB,gBACpB,EAAKwJ,eAAiB,EAAKA,eAAexJ,KAApB,gBACtB,EAAKyJ,MAAQ,KAfI,E,qDAkBnB,WAAqB,IAAD,OACZ9F,EAAczD,KAAKJ,MAAMO,UAAUsD,YAAYA,YAC/CvB,EAAY,IAAIsB,EAAUC,GAChCzD,KAAK+B,SAAS,CAAEG,UAAWA,IAC3BA,EAAUsH,cAAcpH,MAAK,SAACkC,GAAD,OAC3B,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BqH,SAAUzE,EAAKA,WAE7B,MAAdtE,KAAKuJ,QACPvJ,KAAKuJ,MAAQrH,EAAUuH,mB,uBAI3B,SAAUpH,GACRrC,KAAK+B,SAAS,CAACkH,YAAa5G,EAAWiC,OACvCtE,KAAK+B,SAAS,CAACiH,MAAM,M,uBAGvB,WACEhJ,KAAK+B,SAAS,CAACiH,MAAM,M,4BAGvB,SAAetF,GAEb,OACES,OAAOuF,KAAKb,GAAgBc,KAAI,SAAA7E,GAAC,MACjC,CACE,GAAMA,EACN,MAASA,EACT,OANkB8E,EAMIlG,EAAQmG,aAAa/E,GANZgF,WAAWF,GAAKG,QAAQ,IAOvD,MAASlB,EAAe/D,IAP5B,IAAsB8E,O,0BAYxB,WAAiC,IAApB3F,EAAmB,uDAAN,KACxBjE,KAAKmJ,YACLnJ,KAAK+B,SAAS,CAACmH,cAAc,IAC7B,IAAItF,EAAa5D,KAAK0B,MAAMuH,YAAYxG,GACpCuB,EAAShE,KAAK0B,MAAMuH,YAAYjF,OACpChE,KAAK0B,MAAMQ,UAAU8H,aAAapG,EAAYI,EAAQC,K,4BAGxD,WACEjE,KAAKmJ,YACLnJ,KAAK+B,SAAS,CAACmH,cAAc,M,mCAG/B,WAAyB,IAAD,OACtB,OACE,eAACe,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAS,SAASnB,KAAMhJ,KAAK0B,MAAMwH,aAAckB,QAASpK,KAAK0B,MAAMwH,aAAcmB,UAAU,EAA7G,UACE,cAACJ,EAAA,EAAMK,OAAP,CAAc/J,MAAO,CAACU,UAAW,UAAjC,SACE,cAACgJ,EAAA,EAAMM,MAAP,yBAEF,eAACN,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAahK,MAAO,CAACyG,MAAO6B,EAAe7I,KAAK0B,MAAMuH,YAAYvF,SAAUzC,UAAW,SAAUH,aAAc,IAA/G,iCAAyId,KAAK0B,MAAMuH,YAAYvF,QAAhK,WACA,mBAAGnD,MAAO,CAACU,UAAW,UAAtB,SAAkCjB,KAAK0B,MAAMuH,YAAYjF,YAE3D,eAACiG,EAAA,EAAMQ,OAAP,WACE,cAACC,EAAA,EAAD,CAAKnK,MAAO,CAACU,UAAW,UAAxB,SACA,cAACgJ,EAAA,EAAMM,MAAP,6CAGEpG,OAAOuF,KAAKb,GAAgBc,KAAI,SAAAjG,GAAO,OACvC,cAACxC,EAAA,EAAD,CAAsBX,MAAO,CAACoK,gBAAiB9B,EAAenF,GAAUkH,OAAQ,QAC9EvJ,QAAS,kBAAM,EAAKgI,aAAa3F,IADnC,SAEGA,GAFUA,c,2BAUvB,WAAiB,IAAD,OACd,GAAI1D,KAAK0B,MAAMsH,KACb,OACE,eAACiB,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAS,SAASnB,KAAMhJ,KAAK0B,MAAMsH,KAAMoB,OAAQpK,KAAKmJ,UAAWkB,UAAU,EAA3F,UACE,cAACJ,EAAA,EAAMK,OAAP,UACE,cAACL,EAAA,EAAMM,MAAP,UAAcvK,KAAK0B,MAAMuH,YAAY4B,SAEvC,eAACZ,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAahK,MAAO,CAACyG,MAAO6B,EAAe7I,KAAK0B,MAAMuH,YAAYvF,SAAUzC,UAAW,SAAUH,aAAc,IAA/G,sBAA8Hd,KAAK0B,MAAMuH,YAAYvF,QAArJ,OACA,4BAAI1D,KAAK0B,MAAMuH,YAAYjF,SAC3B,cAAC1D,EAAA,EAAD,CAAWC,MAAO,CAACuK,OAAQ,KAA3B,SAAiC,cAAC,EAAD,CAAUxG,KAAMtE,KAAK+K,eAAe/K,KAAK0B,MAAMuH,oBAElF,eAACgB,EAAA,EAAMQ,OAAP,WACA,cAACvJ,EAAA,EAAD,CAAQX,MAAO,CAACoK,gBAAiB,UAAWC,OAAQ,QAASvJ,QAAS,kBAAM,EAAKgI,gBAAjF,mBAGA,cAACnI,EAAA,EAAD,CAAQX,MAAO,CAACoK,gBAAiB,UAAWC,OAAQ,QAASvJ,QAAS,kBAAM,EAAKiI,kBAAjF,8B,oBAWR,WACE,OACE,qBAAK1G,UAAW4F,EAAOE,KAAvB,SACE,eAACpI,EAAA,EAAD,WACE,cAAC,EAAD,CAAYL,SAAUD,KAAKJ,MAAMK,WACjC,cAAC,IAAD,CACEU,UAAW,CAACC,WAAY,OAAQC,SAAW,QAC3CN,MAAO,CAACC,UAAU,QAASM,aAAc,QACzCC,gBAAiB,oCACjBC,sBAAuB,EAJzB,wCAMA,oBAAIT,MAAO,CAACU,UAAW,SAAU+J,WAAY,GAAIhE,MAAO,QAAxD,4CAEA,wBAAQiE,IAAI,sEACZ,eAACP,EAAA,EAAD,WACE,cAAC,EAAD,CAAapI,UAAWtC,KAAKsC,UAAW4I,UAAWlL,KAAKkL,UAAWhJ,UAAWlC,KAAK0B,MAAMQ,YACxFlC,KAAK0B,MAAMwH,aAAelJ,KAAKmL,wBAAyBnL,KAAKoJ,4B,GAvIvD9H,IAAMC,WA+IV6J,cAAW5C,EAAX4C,CAAmB5J,YAAasH,I,mDCzKzCD,EAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAmFCwC,E,kDA9Eb,WAAYzL,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXsH,MAAM,EACNsC,kBAAkB,GAEpB,EAAKC,YAAc,EAAKA,YAAYzL,KAAjB,gBACnB,EAAK0L,aAAe,EAAKA,aAAa1L,KAAlB,gBAEpB,EAAK2L,YACHtH,OAAOuF,KAAKb,GAAgBc,KAAI,SAAAjG,GAAO,MACvC,CACE,GAAMA,EACN,MAASA,EACT,OANkBkG,EAMI,EAAKhK,MAAM8D,QAAQmG,aAAanG,GANvBoG,WAAWF,GAAKG,QAAQ,IAOvD,MAASlB,EAAenF,IAP5B,IAAsBkG,KARL,E,+CAmBnB,SAAY9H,GACV9B,KAAK+B,SAAS,CACZiH,MAAOhJ,KAAK0B,MAAMsH,S,0BAItB,SAAalH,GACX9B,KAAK+B,SAAS,CAACuJ,kBAAkB,IACjCtL,KAAKJ,MAAMsC,UAAUwJ,cAAc1L,KAAKJ,MAAM8D,QAAQjB,IACtDzC,KAAKJ,MAAM+L,cACX3L,KAAKJ,MAAM+L,gB,oBAGb,WACE,OACE,eAACC,EAAA,EAAD,CAAMrL,MAAO,CAACwG,WAAY8B,EAAe7I,KAAKJ,MAAM8D,QAAQA,SAAUmI,MAAO,SAA7E,UACE,cAACD,EAAA,EAAKtB,OAAN,UACE,cAACI,EAAA,EAAD,UACE,cAACoB,EAAA,EAAD,UACE,wBAAQzK,QAASrB,KAAKwL,aAAcjL,MAAO,CAACqK,OAAQ,EAAGD,gBAAiB,eAAxE,SACE3K,KAAK0B,MAAM4J,iBACX,sBAAKS,MAAM,6BAA6BF,MAAM,KAAKf,OAAO,KAAKxD,KAAK,eAAe1E,UAAU,cAAcoJ,QAAQ,YAAnH,UACE,sBAAMC,EAAE,oKACR,sBAAMC,SAAS,UAAUD,EAAE,kPAE7B,cAACE,EAAA,EAAD,CACEpJ,GAAG,OACHqJ,UAAU,SACVjL,KAAK,KACLkL,KAAK,SACL,cAAY,iBAMtB,eAACT,EAAA,EAAKpB,KAAN,CAAWnJ,QAASrB,KAAKuL,YAAahL,MAAO,CAAC+L,cAAe,GAA7D,UACE,cAACV,EAAA,EAAKW,KAAN,CAAWhM,MAAO,CAACiM,QAAS,OAAQ9L,eAAgB,UAApD,SACA,4BAAIV,KAAKJ,MAAM8D,QAAQM,OAAOyI,MAAM,EAAE,IAAM,UAE5C,eAACxC,EAAA,EAAD,CAAOC,UAAQ,EAAClB,KAAMhJ,KAAK0B,MAAMsH,KAAMoB,OAAQpK,KAAKuL,YAAalB,UAAU,EAA3E,UACE,cAACJ,EAAA,EAAMK,OAAP,CAAcoC,aAAW,EAAzB,SACE,cAACzC,EAAA,EAAMM,MAAP,UAAcvK,KAAKJ,MAAM8D,QAAQmH,SAEnC,eAACZ,EAAA,EAAMO,KAAP,WACE,eAACP,EAAA,EAAMM,MAAP,CAAahK,MAAO,CAACyG,MAAO6B,EAAe7I,KAAKJ,MAAM8D,QAAQA,SAAUzC,UAAW,SAAUH,aAAc,IAA3G,sBAA0Hd,KAAKJ,MAAM8D,QAAQA,QAA7I,OACA,4BAAI1D,KAAKJ,MAAM8D,QAAQM,SACvB,cAAC1D,EAAA,EAAD,CAAWC,MAAO,CAACuK,OAAQ,KAA3B,SAAiC,cAAC,EAAD,CAAUxG,KAAMtE,KAAKyL,gC,GApE9CnK,IAAMC,W,SCFtBiH,I,OAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACVnI,UAAW,OAITqI,GAAiB,CACrB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAGR8D,GAAkB,CACtB,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MAGHC,G,kDACF,WAAYhN,GAAQ,IAAD,8BACf,cAAMA,IAWViN,cAAiB,CACfjM,WAAY,QAbK,EAgBnB+K,YAAc,SAACmB,GAAgB,IAAD,EAC5BA,EAAaA,GAA0B,EAAKpL,MAAMoL,YAClD,IAAK5K,WAAU6K,kBAAf,oBAAoCD,IAAY1K,MAAK,SAACkC,GAClD,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BqH,SAAUzE,EAAKA,QAC7C,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BsL,cAAe,EAAKC,iBAAiB3I,EAAKA,aApB3D,EAyBnB4I,kBAAoB,WAClB,IAAMzJ,EAAc,EAAK7D,MAAMO,UAAUsD,YAAYA,YACrD,EAAKvB,UAAY,IAAIsB,EAAUC,GAC/B,IAAI0J,EAAQ,IAAIC,KACZN,EAAa,CAACK,EAAME,cAAeF,EAAMG,WAAW,EAAGH,EAAMI,WACjE,EAAKxL,SAAS,CAAC+K,WAAYA,IAC3B,EAAKnB,YAAYmB,IA/BA,EAkCnBU,eAAiB,SAAC7L,GAChB,IAAImC,EAAQ2J,SAASd,GAAgBhL,EAAM+L,WAAWjB,MAAM,EAAE,KAC1D1I,EAAM0J,SAAS9L,EAAM+L,WAAWjB,MAAM,EAAE,KACxC5I,EAAO4J,SAAS9L,EAAM+L,WAAWjB,MAAM,GAAG,KAC9C,EAAK1K,SAAS,CAAC+K,WAAY,CAACjJ,EAAMC,EAAOC,KACzC,EAAK7B,UAAU6K,kBAAkBlJ,EAAMC,EAAOC,GAAK3B,MAAK,SAACkC,GACrD,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BqH,SAAUzE,EAAKA,QAC7C,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BsL,cAAe,EAAKC,iBAAiB3I,EAAKA,aAzC3D,EAuEnBqJ,eAAiB,SAAC5E,GAChB,OACE,cAACzI,EAAA,EAAD,UACGyI,EAASY,KAAI,SAACjG,GAAD,OACd,cAACkK,EAAA,EAAD,CAAMrN,MAAO,CAAC+L,cAAe,IAA7B,SACE,cAAC,EAAD,CAA0BX,YAAa,EAAKA,YAAajI,QAASA,EAASxB,UAAW,EAAKA,WAA7EwB,EAAQjB,YA1E1B,EAAKP,UAAY,KACjB,EAAKR,MAAQ,CACXqH,SAAU,GACViE,cAAe,GACfF,WAAY,IAEd,EAAKU,eAAiB,EAAKA,eAAe1N,KAApB,gBACtB,EAAKmN,iBAAmB,EAAKA,iBAAiBnN,KAAtB,gBATT,E,oDA8CnB,SAAiBiJ,GACf,GAAIA,EAAS8E,QAAU,EACrB,MAAO,GAGT,IAAIb,EAAgB,GACpB,IAAK,IAAIc,KAAMjF,GACbmE,EAAcc,GAAM,CAClB,GAAMA,EACN,MAASA,EACT,MAAS,EACT,MAASjF,GAAeiF,IAXH,MAIHlE,EAJG,cAcHb,GAdG,yBAcdrF,EAdc,QAevBS,OAAOuF,KAAKb,IAAgBc,KAAI,SAAAoE,GAAG,OACjCf,EAAce,GAAd,OAA+BrK,EAAQmG,aAAakE,OAFxD,2BAAiC,IAdR,8BAmBzB,IAAK,IAAIC,KAAMnF,GACbmE,EAAcgB,GAAd,OAhBoBpE,EAgBsBoD,EAAcgB,GAAd,MAA6BjF,EAAS8E,OAhB/C/D,WAAWF,GAAKG,QAAQ,IAkB3D,OAAO5F,OAAO8J,OAAOjB,K,oBAevB,WACE,OACI,qBAAKpK,UAAW4F,GAAOE,KAAvB,SACE,eAACpI,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CACIK,UAAW,CAACC,WAAY,OAAQC,SAAW,IAC3CN,MAAO,CAACC,UAAU,KAAMM,aAAc,QACtCC,gBAAiB,oCACjBC,sBAAuB,EAJ3B,kBAMA,oBAAIT,MAAO,CAACU,UAAW,SAAU+F,MAAO,OAAQlG,aAAc,IAA9D,uCACA,cAACR,EAAA,EAAD,UACE,eAACoK,EAAA,EAAD,WACE,cAACoB,EAAA,EAAD,CAAKoC,GAAI,EAAG3N,MAAO,CAAC0G,QAAS,GAA7B,SAAiC,cAAC,IAAD,CAAU1G,MAAO,CAAC4N,WAAY,WAAYC,WAAYpO,KAAKwN,mBAC5F,cAAC1B,EAAA,EAAD,CAAKoC,GAAI,EAAT,SAAY,cAAC5N,EAAA,EAAD,CAAWC,MAAO,CAACuK,OAAQ,IAAKuD,SAAU,WAAYtI,MAAO,KAA7D,SAAmE,cAAC,EAAD,CAAUzB,KAAMtE,KAAK0B,MAAMsL,oBAC1G,cAAClB,EAAA,EAAD,CAAKoC,GAAI,EAAG3N,MAAO,CAAC8N,SAAU,WAAYtI,MAAO,KAAjD,SACI/F,KAAK2N,eAAe3N,KAAK0B,MAAMqH,0B,GArGlCzH,IAAMC,WA+GV6J,eAAW5C,GAAX4C,CAAmB5J,YAAaoL,K,wCCtGhC0B,OAtDf,SAAe1O,GAeX,OACA,cAAC,KAAD,CACI0E,KAAM1E,EAAM0E,KACZoF,KAjBS,CAET,YAgBA6E,QAAQ,UACRC,YAAY,QACZ7I,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDM,YAAa,CAAEC,KAAM,SACrBmI,gBAAiB,GACjBC,QAAS,GACTC,SAAU,CAAElG,MAAO,cACnBmG,eAAgB,EAChBC,OAAQ,CAAEC,OAAQ,UAClBC,UAAU,WACVC,aAAa,SACbxH,QAAS,CACL,CACIC,OAAQ,YACRC,UAAW,SACXE,YAAa,IACbC,YAAa,GACbE,UAAW,GACXC,WAAY,GACZC,cAAe,OACfG,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJhI,MAAO,CACH0H,cAAe,eChCrCO,GAAS,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,SAAU,EACVnI,UAAW,MAITyO,GAAS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGEpG,GAAiB,CACnB,MAAS,UACT,KAAQ,UACR,IAAO,UACP,KAAQ,UACR,QAAW,UACX,SAAY,WAIVqG,G,kDACF,WAAYtP,GAAQ,IAAD,8BACf,cAAMA,IAOV+L,YAAc,WACV,EAAKzJ,UAAUiN,kBAAkB,EAAKzN,MAAMmC,MAAMzB,MAC9C,SAACkC,GAAD,OAAU,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BqH,SAAUzE,EAAKA,YAR3D,EAAK5C,MAAQ,CACXqH,SAAU,GACVlF,KAAM,MAJO,E,qDAcnB,WAAqB,IAAD,OACVJ,EAAczD,KAAKJ,MAAMO,UAAUsD,YAAYA,YACrDzD,KAAKkC,UAAY,IAAIsB,EAAUC,GAC/BzD,KAAKkC,UAAUiN,kBAAkB,MAAM/M,MACnC,SAACkC,GACG,EAAKvC,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BqH,SAAUzE,EAAKA,a,0BAKzD,WACI,IADW,EACP8K,EAAgB,CAChB,MAAS,EACT,KAAQ,EACR,SAAY,EACZ,IAAO,EACP,KAAQ,EACR,QAAW,GAPJ,cASWpP,KAAK0B,MAAMqH,UATtB,IASX,2BAA2C,CAAC,IAAjCrF,EAAgC,QACvC,IAAK,IAAIoB,KAAK+D,GACVuG,EAActK,IAAOpB,EAAQmG,aAAa/E,GAAG9E,KAAK0B,MAAMqH,SAAS8E,QAX9D,8BAcX,OACI1J,OAAOuF,KAAK0F,GAAezF,KAAI,SAACjG,GAAD,MACvB,CACI,QAAWA,EACX,SAAY0L,EAAc1L,S,oBAO9C,WAAU,IAAD,OACL,OACI,qBAAKd,UAAW4F,GAAOE,KAAvB,SACE,eAACpI,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CACIK,UAAW,CAACC,WAAY,OAAQC,SAAW,QAC3CN,MAAO,CAACC,UAAU,KAAMM,aAAc,QACtCC,gBAAiB,oCACjBC,sBAAuB,EAJ3B,wBAMA,eAACqO,GAAA,EAAD,CAAa9O,MAAO,CAAC+O,YAAa,KAAK,aAAW,gBAAlD,UACI,cAACC,GAAA,EAAD,CAAgBnO,QAAQ,YAAY2B,GAAIsM,KAAaG,MAAM,OAAO/M,GAAG,qBAAqBpB,QAAS,kBAAM,EAAKU,SAAS,CAAE8B,KAAM,QAA/H,SACMoL,GAAOtF,KAAI,SAAC8F,GAAD,OACb,cAACC,GAAA,EAASC,KAAV,CAAeC,SAAUH,EAAzB,SAA6BA,SAEjC,cAACF,GAAA,EAAD,CAAgBnO,QAAQ,YAAY2B,GAAIsM,KAAaG,MAAM,OAAO/M,GAAG,qBAAqBpB,QAAS,kBAAM,EAAKU,SAAS,CAAE8B,KAAM,QAA/H,SACEoL,GAAOtF,KAAI,SAAC8F,GAAD,OACT,cAACC,GAAA,EAASC,KAAV,CAAeC,SAAUH,EAAzB,SAA6BA,SAEjC,cAACF,GAAA,EAAD,CAAgBnO,QAAQ,YAAY2B,GAAIsM,KAAaG,MAAM,OAAO/M,GAAG,qBAAqBpB,QAAS,kBAAM,EAAKU,SAAS,CAAE8B,KAAM,QAA/H,SACEoL,GAAOtF,KAAI,SAAC8F,GAAD,OACT,cAACC,GAAA,EAASC,KAAV,CAAeC,SAAUH,EAAzB,SAA6BA,YAGrC,qBAAKlP,MAAO,CAACuK,OAAQ,IAAKwB,cAAe,IAAzC,SACA,cAAC,GAAD,CAAOhI,KAAMtE,KAAK6P,4B,GA5ETvO,IAAMC,WAoFhB6J,eAAW5C,GAAX4C,CAAmB5J,YAAa0N,KC1HzCY,G,kDAEJ,WAAYlQ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,SAAW,IAAI8P,WAAS,CAC3BC,OAAQ,+CACRC,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,cAExC,EAAKC,mBAAL,uCAA0B,WAAOC,EAAWC,GAAlB,SAAAzQ,EAAA,sDACxBH,EAAM6Q,QAAQC,QAAQC,wBAAcH,EAAaL,OAAOC,SAASC,SADzC,2CAA1B,oCAAArQ,KAAA,eAPiB,E,0CAYnB,WACE,OACE,cAAC,IAAD,CAAUC,SAAUD,KAAKC,SAAUqQ,mBAAoBtQ,KAAKsQ,mBAA5D,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWnR,IACjC,cAAC,IAAD,CAAOkR,KAAK,YAAYC,UAAWC,MACnC,cAAC,IAAD,CAAaF,KAAK,QAAQC,UAAWhI,IACrC,cAAC,IAAD,CAAa+H,KAAK,QAAQC,UAAWlE,KACrC,cAAC,IAAD,CAAaiE,KAAK,cAAcC,UAAW5B,c,GAtBlC3N,aA6BJuO,MChCTW,GAAUO,cAEhBC,IAASC,OACP,cAAC,IAAD,CAAQT,QAASA,GAAjB,SACE,cAAC,GAAD,CAAMA,QAASA,OAEhBU,SAASC,eAAe,W","file":"static/js/main.955c4f47.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { withOktaAuth } from '@okta/okta-react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n  }\n\n  async login() {\n    await this.props.oktaAuth.signInWithRedirect();\n  }\n\n  render() {\n    if (this.props.authState.isAuthenticated) {\n      return <Redirect to='/home' />\n    } else {\n      return (\n        <Container>\n          <div style={{marginTop: 300, alignItems: 'center', justifyContent: 'center'}}>\n            <BlinkingCursorTextBuilder\n            textStyle={{fontWeight :\"bold\", fontSize : \"50px\"}}\n            style={{marginBottom :\"10px\"}}\n            cursorComponent={<div>|</div>}\n            blinkTimeAfterFinish={-1}>Welcome  to  Mood  Tracker\n            </BlinkingCursorTextBuilder>\n          </div>\n          <div style={{textAlign: 'center', alignItems: 'center', justifyContent: 'center'}}>\n            <Button style={{marginTop: 20}} size=\"lg\" variant=\"light\" onClick={this.login}>Login with Okta</Button>\n          </div>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default withOktaAuth(Login);","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nclass EmotionForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.apiClient.createEmotion({\"status\": this.state.value}).then(\n            (newEmotion) => this.props.showModal(newEmotion)\n        );\n        event.target.reset();\n    }\n\n    render() {\n        return (\n        <Form id='myForm' onSubmit={this.handleSubmit} style={{marginTop: 50}}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control as=\"textarea\" rows={3} onChange={this.handleChange}/>\n            </Form.Group>\n            <Button variant=\"dark\" type=\"submit\">Submit</Button>\n        </Form>\n        );\n    }\n}\n\nexport default EmotionForm;","import axios from 'axios';\n\nconst BASE_URI = 'http://localhost:4433';\n// const BASE_URI = 'https://mood-tracker-sg.herokuapp.com';\n\nconst client = axios.create({\n baseURL: BASE_URI,\n json: true\n});\n\nconst monthToMonthNum = {\n  \"Jan\": \"01\",\n  \"Feb\": \"02\",\n  \"Mar\": \"03\",\n  \"Apr\": \"04\",\n  \"May\": \"05\",\n  \"Jun\": \"06\",\n  \"Jul\": \"07\",\n  \"Aug\": \"08\",\n  \"Sep\": \"09\",\n  \"Oct\": \"10\",\n  \"Nov\": \"11\",\n  \"Dec\": \"12\",\n};\n\nclass APIClient {\n  constructor(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  createEmotion(emotion) {\n    return this.perform('post', '/emotions/', emotion);\n  }\n\n  deleteEmotion(emotion_id) {\n    return this.perform('delete', `/emotions/${emotion_id}/`);\n  }\n\n  getEmotions() {\n    return this.perform('get', `/emotions/`);\n  }\n\n  getEmotionsByDate(year, month, day) {\n    return this.perform('get', `/emotions/${year}/${month}/${day}/`);\n  }\n\n  getEmotionsByMonthAndYear(year, month) {\n    return this.perform('get', `/emotions/${year}/${month}/`);\n  }\n\n  getEmotionsByYear(year) {\n    return this.perform('get', `/emotions/${year}/`);\n  }\n\n  downloadModel() {\n    return this.perform('get', `/download_model/`);\n  }\n\n  uploadStatus(emotion_id, status, emotion_name=null) {\n    let obj = Object({\"emotion_id\": emotion_id, \"status\": status, \"emotion_name\": emotion_name});\n    return this.perform('post', `/upload_status/`, obj);\n  }\n\n  uploadModel() {\n    return this.perform('get', `/upload_model/`);\n  }\n\n  async perform (method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data,\n      headers: {\n        Authorization: `Bearer ${this.accessToken}`\n      }\n    }).then(resp => {\n      return resp.data ? resp.data : resp.error;\n    })\n  }\n}\n\nexport default APIClient;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass EmotionNav extends React.Component {\n\n  logout = (e) => {\n    e.preventDefault();\n    this.props.oktaAuth.signOut();\n  }\n\n  render() {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" style={{marginBottom: 50, marginTop: 10}}>\n        <Container>\n          <Navbar.Brand href=\"/home\">Mood Tracker</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/data\">Data</Nav.Link>\n              <Nav.Link href=\"/statistics\">Statistics</Nav.Link>\n              {/* <Nav.Link href=\"/profile\">Profile</Nav.Link> */}\n              {/* <Nav.Link href=\"/about\">About</Nav.Link> */}\n            </Nav>\n            <Nav>\n              <Button variant=\"light\" onClick={this.logout} style={{float: 'right'}}>Log Out</Button>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default EmotionNav;","import { ResponsivePie } from '@nivo/pie'\n\nfunction PieChart(props) {\n    return (\n    <ResponsivePie\n        data={props.data}\n        margin={{ top: 40, right: 40, bottom: 80, left: 40 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'Fear'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Joy'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Surprise'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Love'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'Anger'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'Sadness'\n                },\n                id: 'lines'\n            },\n        ]}\n        legends={[\n            {\n                anchor: 'bottom',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 70,\n                itemsSpacing: 12,\n                itemWidth: 60,\n                itemHeight: 25,\n                itemTextColor: '#999',\n                itemDirection: 'left-to-right',\n                itemOpacity: 1,\n                symbolSize: 15,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n    )\n}\nexport default PieChart;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Row from 'react-bootstrap/Row';\nimport { withOktaAuth } from '@okta/okta-react';\nimport EmotionForm from \"../EmotionForm\"\nimport Container from 'react-bootstrap/Container';\nimport APIClient from '../apiClient';\nimport EmotionNav from \"../EmotionNav\";\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Modal from 'react-bootstrap/Modal';\nimport PieChart from \"../PieChart\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n  ml3: {\n    fontWeight: 900,\n    fontSize: 3.5\n  }\n});\n\nconst emotionToColor = {\n  \"Anger\": \"#e8c1a0\",\n  \"Fear\": \"#f47560\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      emotions: [],\n      apiClient: null,\n      show: false,\n      currEmotion: null,\n      disagreeShow: false,\n    };\n    this.showModal =  this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.generateModal = this.generateModal.bind(this);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleDisagree = this.handleDisagree.bind(this);\n    this.model = null;\n  }\n\n  componentDidMount() {\n    const accessToken = this.props.authState.accessToken.accessToken;\n    const apiClient = new APIClient(accessToken);\n    this.setState({ apiClient: apiClient });\n    apiClient.getEmotions().then((data) =>\n      this.setState({...this.state, emotions: data.data})\n    );\n    if (this.model != null) {\n      this.model = apiClient.downloadModel();\n    }\n  }\n\n  showModal(newEmotion) {\n    this.setState({currEmotion: newEmotion.data});\n    this.setState({show: true});\n  }\n\n  hideModal() {\n    this.setState({show: false});\n  }\n\n  getEmotionData(emotion) {\n    function transformNum(num) {return parseFloat(num).toFixed(2)}\n    return (\n      Object.keys(emotionToColor).map(e => (\n      {\n        \"id\": e,\n        \"label\": e,\n        \"value\": transformNum(emotion.emotion_data[e]),\n        \"color\": emotionToColor[e],\n      }))\n    )\n  }\n\n  handleStatus(emotion_name=null) {\n    this.hideModal();\n    this.setState({disagreeShow: false});\n    let emotion_id = this.state.currEmotion.id;\n    let status = this.state.currEmotion.status;\n    this.state.apiClient.uploadStatus(emotion_id, status, emotion_name);\n  }\n\n  handleDisagree() {\n    this.hideModal();\n    this.setState({disagreeShow: true});\n  }\n\n  generateDisagreeModal() {\n    return (\n      <Modal centered backdrop=\"static\" show={this.state.disagreeShow} onHide={!this.state.disagreeShow} keyboard={false}>\n        <Modal.Header style={{textAlign: 'center'}}>\n          <Modal.Title>Disagree</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Modal.Title style={{color: emotionToColor[this.state.currEmotion.emotion], textAlign: 'center', marginBottom: 20}}>The model predicted {this.state.currEmotion.emotion} for:</Modal.Title>\n          <p style={{textAlign: 'center'}}>{this.state.currEmotion.status}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Row style={{textAlign: 'center'}}>\n          <Modal.Title>What is the correct emotion?</Modal.Title>\n          </Row>\n          {\n            Object.keys(emotionToColor).map(emotion => \n            <Button key={emotion} style={{backgroundColor: emotionToColor[emotion], border: 'none'}} \n              onClick={() => this.handleStatus(emotion)}>\n              {emotion}\n            </Button>)\n          }\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  generateModal() {\n    if (this.state.show) {\n      return (\n        <Modal centered backdrop=\"static\" show={this.state.show} onHide={this.hideModal} keyboard={false}>\n          <Modal.Header>\n            <Modal.Title>{this.state.currEmotion.date}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Modal.Title style={{color: emotionToColor[this.state.currEmotion.emotion], textAlign: 'center', marginBottom: 20}}>You felt {this.state.currEmotion.emotion}.</Modal.Title>\n            <p>{this.state.currEmotion.status}</p>\n            <Container style={{height: 400}}><PieChart data={this.getEmotionData(this.state.currEmotion)}/></Container>\n          </Modal.Body>\n          <Modal.Footer>\n          <Button style={{backgroundColor: \"#61cdbb\", border: 'none'}} onClick={() => this.handleStatus()}>\n            Agree\n          </Button>\n          <Button style={{backgroundColor: \"#f47560\", border: 'none'}} onClick={() => this.handleDisagree()}>\n            Disagree\n          </Button>\n        </Modal.Footer>\n        </Modal>\n      )\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <Container>\n          <EmotionNav oktaAuth={this.props.oktaAuth}></EmotionNav>\n          <BlinkingCursorTextBuilder\n            textStyle={{fontWeight :\"bold\", fontSize : \"50px\"}}\n            style={{marginTop:\"200px\", marginBottom :\"10px\"}}\n            cursorComponent={<div>|</div>}\n            blinkTimeAfterFinish={-1}>Welcome  to  Mood  Tracker\n          </BlinkingCursorTextBuilder>\n          <h4 style={{textAlign: 'center', paddingTop: 20, color: 'grey'}}>Enter your daily status below.</h4>\n\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js\"></script>\n          <Row>\n            <EmotionForm showModal={this.showModal} showAlert={this.showAlert} apiClient={this.state.apiClient}/>\n            {this.state.disagreeShow ? this.generateDisagreeModal(): this.generateModal()}\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(withOktaAuth(Home));","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport PieChart from \"../PieChart\";\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst emotionToColor = {\n  \"Anger\": \"#e8c1a0\",\n  \"Fear\": \"#f47560\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nclass Emotion extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showDeleteButton: true,\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    function transformNum(num) {return parseFloat(num).toFixed(2)}\n    this.emotionData = \n      Object.keys(emotionToColor).map(emotion => (\n      {\n        \"id\": emotion,\n        \"label\": emotion,\n        \"value\": transformNum(this.props.emotion.emotion_data[emotion]),\n        \"color\": emotionToColor[emotion],\n      }));\n  }\n\n  handleClick(event) {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  handleDelete(event) {\n    this.setState({showDeleteButton: false});\n    this.props.apiClient.deleteEmotion(this.props.emotion.id);\n    this.props.updateState();\n    this.props.updateState();\n  }\n\n  render() {\n    return (\n      <Card style={{background: emotionToColor[this.props.emotion.emotion], width: '20rem'}}>\n        <Card.Header>\n          <Row>\n            <Col>\n              <button onClick={this.handleDelete} style={{border: 0, backgroundColor: 'transparent'}}>\n              { this.state.showDeleteButton ? \n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\" >\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                  <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                </svg> : \n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                /> }\n              </button>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body onClick={this.handleClick} style={{paddingBottom: 0}}>\n          <Card.Text style={{display: 'flex', justifyContent: 'center'}}>\n          <p>{this.props.emotion.status.slice(0,30) + \"...\"}</p>\n            </Card.Text>\n          <Modal centered show={this.state.show} onHide={this.handleClick} keyboard={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>{this.props.emotion.date}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Modal.Title style={{color: emotionToColor[this.props.emotion.emotion], textAlign: 'center', marginBottom: 20}}>You felt {this.props.emotion.emotion}.</Modal.Title>\n              <p>{this.props.emotion.status}</p>\n              <Container style={{height: 350}}><PieChart data={this.emotionData}/></Container>\n            </Modal.Body>\n          </Modal>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\n\n\n\nexport default Emotion;","import React from 'react';\nimport APIClient from '../apiClient';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withOktaAuth } from '@okta/okta-react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport EmotionNav from \"../EmotionNav\";\nimport Grid from '@material-ui/core/Grid';\nimport Emotion from \"../Emotion\";\nimport PieChart from \"../PieChart\";\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Calendar from 'react-calendar'; \nimport 'react-calendar/dist/Calendar.css';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n});\n\nconst emotionToColor = {\n  \"Anger\": \"#f47560\",\n  \"Fear\": \"#e8c1a0\",\n  \"Joy\": \"#f1e15b\",\n  \"Love\": \"#e8a838\",\n  \"Sadness\": \"#61cdbb\",\n  \"Surprise\": \"#97e3d5\",\n}\n\nconst monthToMonthNum = {\n  \"Jan\": \"01\",\n  \"Feb\": \"02\",\n  \"Mar\": \"03\",\n  \"Apr\": \"04\",\n  \"May\": \"05\",\n  \"Jun\": \"06\",\n  \"Jul\": \"07\",\n  \"Aug\": \"08\",\n  \"Sep\": \"09\",\n  \"Oct\": \"10\",\n  \"Nov\": \"11\",\n  \"Dec\": \"12\",\n};\n\nclass Data extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = null;\n        this.state = {\n          emotions: [],\n          aggregateData: [],\n          currentDay: [],\n        };\n        this.handleClickDay = this.handleClickDay.bind(this);   \n        this.getAggregateData = this.getAggregateData.bind(this);\n    }\n\n    calendarStyle = ({\n      fontWeight: 'bold',\n    });\n\n    updateState = (currentDay) => {\n      currentDay = currentDay ? currentDay : this.state.currentDay;\n      this.apiClient.getEmotionsByDate(...currentDay).then((data) => {\n          this.setState({...this.state, emotions: data.data});\n          this.setState({...this.state, aggregateData: this.getAggregateData(data.data)});\n        }\n      )\n    }\n\n    componentDidMount = () => {\n      const accessToken = this.props.authState.accessToken.accessToken;\n      this.apiClient = new APIClient(accessToken);\n      let today = new Date();\n      let currentDay = [today.getFullYear(), today.getMonth()+1, today.getDate()];\n      this.setState({currentDay: currentDay});\n      this.updateState(currentDay);\n    }\n\n    handleClickDay = (value) => {\n      let month = parseInt(monthToMonthNum[value.toString().slice(4,7)]);\n      let day = parseInt(value.toString().slice(8,10));\n      let year = parseInt(value.toString().slice(11,15));\n      this.setState({currentDay: [year, month, day]});\n      this.apiClient.getEmotionsByDate(year, month, day).then((data) => {\n          this.setState({...this.state, emotions: data.data});\n          this.setState({...this.state, aggregateData: this.getAggregateData(data.data)});\n        }\n    );\n    }\n\n    getAggregateData(emotions) {\n      if (emotions.length <= 0) {\n        return [];\n      }\n      function transformNum(num) {return parseFloat(num).toFixed(2)}\n      var aggregateData = {}\n      for (var e1 in emotionToColor) { // set up dict\n        aggregateData[e1] = {\n          \"id\": e1,\n          \"label\": e1,\n          \"value\": 0,\n          \"color\": emotionToColor[e1],\n        }\n      }\n      for (const emotion of emotions) {\n        Object.keys(emotionToColor).map(key => ( // aggregate the data\n          aggregateData[key][\"value\"] += emotion.emotion_data[key]\n        ))\n      }\n      for (var e2 in emotionToColor) {\n        aggregateData[e2][\"value\"] = transformNum(aggregateData[e2][\"value\"] / emotions.length); // normalize the data\n      }\n      return Object.values(aggregateData);\n    }\n\n    renderEmotions = (emotions) => {\n      return (\n        <Container>\n          {emotions.map((emotion) => (\n          <Grid style={{paddingBottom: 25}}>\n            <Emotion key={emotion.id} updateState={this.updateState} emotion={emotion} apiClient={this.apiClient} />\n          </Grid>\n          ))}\n        </Container>\n      );\n    }\n\n    render() {\n      return (\n          <div className={styles.root}>\n            <Container>\n              <EmotionNav></EmotionNav>\n              <BlinkingCursorTextBuilder\n                  textStyle={{fontWeight :\"bold\", fontSize : 50}}\n                  style={{marginTop:\"10\", marginBottom :\"10px\"}}\n                  cursorComponent={<div>|</div>}\n                  blinkTimeAfterFinish={-1}>Data\n              </BlinkingCursorTextBuilder>\n              <h4 style={{textAlign: 'center', color: 'grey', marginBottom: 50}}>Click on day to see data.</h4>\n              <Container>\n                <Row>\n                  <Col sm={4} style={{padding: 0}}><Calendar style={{fontFamily: 'inherit'}} onClickDay={this.handleClickDay}/></Col>\n                  <Col sm={6}><Container style={{height: 400, position: 'relative', left: -100}}><PieChart data={this.state.aggregateData}/></Container></Col>\n                  <Col sm={2} style={{position: 'relative', left: -150}}>\n                    { this.renderEmotions(this.state.emotions) }\n                  </Col>\n                </Row>\n              </Container>\n            </Container>\n          </div>\n      )\n    }\n}\n\nexport default withStyles(styles)(withOktaAuth(Data));","import { ResponsiveRadar } from '@nivo/radar';\n\nfunction Radar(props) {\n    let months = [\n        // 'December',\n        'November',\n        // 'October',\n        // 'September',\n        // 'August',\n        // 'July',\n        // 'June',\n        // 'May',\n        // 'April',\n        // 'March',\n        // 'February',\n        // 'January'\n    ]\n    return (\n    <ResponsiveRadar\n        data={props.data}\n        keys={months}\n        indexBy=\"emotion\"\n        valueFormat=\">-.2f\"\n        margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n        borderColor={{ from: 'color' }}\n        gridLabelOffset={36}\n        dotSize={10}\n        dotColor={{ theme: 'background' }}\n        dotBorderWidth={2}\n        colors={{ scheme: 'paired' }}\n        blendMode=\"multiply\"\n        motionConfig=\"wobbly\"\n        legends={[\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                translateX: -300,\n                translateY: -40,\n                itemWidth: 80,\n                itemHeight: 25,\n                itemTextColor: '#999',\n                symbolSize: 15,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n    )\n}\nexport default Radar;","import React from 'react';\nimport APIClient from '../apiClient';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withOktaAuth } from '@okta/okta-react';\nimport Container from 'react-bootstrap/Container';\nimport EmotionNav from \"../EmotionNav\";\nimport Grid from '@material-ui/core/Grid';\nimport Emotion from \"../Emotion\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { BlinkingCursorTextBuilder } from 'react-animated-text-builders';\nimport Radar from \"../Radar\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 70\n  },\n});\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n]\n\nconst emotionToColor = {\n    \"Anger\": \"#e8c1a0\",\n    \"Fear\": \"#f47560\",\n    \"Joy\": \"#f1e15b\",\n    \"Love\": \"#e8a838\",\n    \"Sadness\": \"#61cdbb\",\n    \"Surprise\": \"#97e3d5\",\n  }\n\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          emotions: [],\n          year: 2021,\n        };\n    }\n\n    updateState = () => {\n        this.apiClient.getEmotionsByYear(this.state.year).then(\n            (data) => this.setState({...this.state, emotions: data.data})\n        );\n    }\n\n    componentDidMount() {\n        const accessToken = this.props.authState.accessToken.accessToken;\n        this.apiClient = new APIClient(accessToken);\n        this.apiClient.getEmotionsByYear(2021).then(\n            (data) => {\n                this.setState({...this.state, emotions: data.data});\n            }\n        );\n    }\n\n    generateData() {\n        let emotionCounts = {\n            \"Anger\": 0,\n            \"Fear\": 0,\n            \"Surprise\": 0,\n            \"Joy\": 0,\n            \"Love\": 0,\n            \"Sadness\": 0,\n        }\n        for (const emotion of this.state.emotions) {\n            for (var e in emotionToColor) {\n                emotionCounts[e] += (emotion.emotion_data[e]/this.state.emotions.length);\n            }\n        }\n        return (\n            Object.keys(emotionCounts).map((emotion) => (\n                    {\n                        \"emotion\": emotion,\n                        \"November\": emotionCounts[emotion],\n                    }\n                )\n            )\n        )\n    }\n\n    render() {\n        return (\n            <div className={styles.root}>\n              <Container>\n                <EmotionNav></EmotionNav>\n                <BlinkingCursorTextBuilder\n                    textStyle={{fontWeight :\"bold\", fontSize : \"50px\"}}\n                    style={{marginTop:\"10\", marginBottom :\"10px\"}}\n                    cursorComponent={<div>|</div>}\n                    blinkTimeAfterFinish={-1}>Statistics\n                </BlinkingCursorTextBuilder>\n                <ButtonGroup style={{paddingLeft: 100}}aria-label=\"Basic example\">\n                    <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"2019\" id=\"bg-nested-dropdown\" onClick={() => this.setState({ year: 2019 })}>\n                        { months.map((m) =>\n                        <Dropdown.Item eventKey={m}>{m}</Dropdown.Item>)}\n                    </DropdownButton>\n                    <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"2020\" id=\"bg-nested-dropdown\" onClick={() => this.setState({ year: 2020 })}>\n                    { months.map((m) =>\n                        <Dropdown.Item eventKey={m}>{m}</Dropdown.Item>)}\n                    </DropdownButton>\n                    <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"2021\" id=\"bg-nested-dropdown\" onClick={() => this.setState({ year: 2021 })}>\n                    { months.map((m) =>\n                        <Dropdown.Item eventKey={m}>{m}</Dropdown.Item>)}\n                    </DropdownButton>\n                </ButtonGroup>\n                <div style={{height: 500, paddingBottom: 10}}>\n                <Radar data={this.generateData()} />\n                </div>\n              </Container>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(withOktaAuth(Statistics));","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { Security, LoginCallback, SecureRoute } from '@okta/okta-react';\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport Login from '../Login'\nimport Home from '../Home'\nimport Data from '../Data'\nimport Statistics from '../Statistics';\n\nclass Main extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.oktaAuth = new OktaAuth({\n      issuer: 'https://dev-51511124.okta.com/oauth2/default',\n      clientId: '0oa2lchc6k2h1T0Ug5d7',\n      redirectUri: window.location.origin + '/callback'\n    });\n    this.restoreOriginalUri = async (_oktaAuth, originalUri) => {\n      props.history.replace(toRelativeUrl(originalUri, window.location.origin));\n    };\n  }\n  \n  render() {\n    return (\n      <Security oktaAuth={this.oktaAuth} restoreOriginalUri={this.restoreOriginalUri}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/callback\" component={LoginCallback} />\n          <SecureRoute path=\"/home\" component={Home} />\n          <SecureRoute path=\"/data\" component={Data} />\n          <SecureRoute path=\"/statistics\" component={Statistics} />\n        </Switch>\n      </Security>\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport Main from './Main';\nconst history = createBrowserHistory();\n\nReactDOM.render((\n  <Router history={history}>\n    <Main history={history} />\n  </Router>\n), document.getElementById('root'))"],"sourceRoot":""}